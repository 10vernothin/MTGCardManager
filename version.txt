Latest Version: Alpha 2.5.2
Static Build: Alpha 1.1
Last Update: M05/D19/Y2020

What's new 2.5:
  -> Added alternate hooked implementation for some classes (mostly as an exercise).
     They will not be used until the project is complete and will probably be part of a new split project. All used assets
     will be in class form.
  -> Added confirmation dialogs for logging out and deleting collection so no accidental deletions
  -> Added routing and fixed missing history objects for some classes.
  -> Created a Database Setup page. It is currently nonfunctional, and only will show your current settings
  -> Database Setup page now functional. The UI checks for connectivity before the host/database can be changed.
    -Added some formatting
    -Password can be shown be mousedowning the "show password" button
    -The Database Setup page will not tell you whether your database is correctly configured. That will be implemented soon.
    -Your sensative data will be stored in db-info.dat, and will be excluded from git
    -db-info.dat will now be auto-generated with dummy default values if it is missing (Note: reading/writing db-info.dat uses Sync.),
     and one can go into the setup menu to set the info 
  -> Due to some concerns, this is a disclaimer that 
     my implementation of SHA-2 is a strict implementation in accordance to the official documents. 

What's new 2.4:
 - Created static production build 
   --> The production build has a 1-to-1 client/server relationship on localhost:5000 (Maybe proxies soon)
   --> It is embedded statically in the api/public folder, and is run using api --> npm start
 - Created new scripts to accomadate the new design:
   --> ">> npm run create-build": creates the build
   --> ">> npm start": starts the production build
   --> ">> npm run client-dev-start": what used to be client-start
   --> ">> npm run api-dev-start": what used to be api-stsart
   --> ">> npm run dev-start": runs api and client concurrently in a dev environment
 - Updated the collection listing to include number of cards
 - Implemented SHA-256 encryption for passwords (references in the files). The hash is in hexadecimal form, though it's also
   useable in binary string form. Password field in TABLE users now updated to store varChar(256) to reflect that change.
 - Fixed the apostrophe problem when searching for cards. The fix will encompass other query strings.

What's new 2.3:
 - Implemented adding and editting preview photos for the collection. (It uses popup design)
 - Partial CSS Splitting (WIP)
 - Cleaning up code to have a standardized structure:
  --> Constructor
  --> Default React Methods (ComponentWillCatch(), Render(), etc)
  --> Render Methods
  --> Loader Methods
  --> Handler Methods
  --> Binded Methods
 - Fixed List view sort

What's new 2.2:
 - List View added for Collection Table
 - You can now download your collection as a JSON file or a CSV file
 - Nomenclature updated. Filenames will be back to having the same name as the default export. Buttons.js are the exception
 - Storing context was determined to be the root of the slowness. Instead of using require.context, it now fetches raw data
   from server. Lazy image downloading is still in effect (i.e downloading data to server only when the image is being used.
   This prevents long update times.) 
 - Split card costs fixed.
 - Refactored the Mana Symbols to be in the images/mana_symbols folder
 - Modularized image panel creation
 - Modularized mana cost panel creation
 - Created front-end display for collection preview photo
 - Created new starting scripts:
     --> >>npm run api-start 
      ------> (this starts the server at :5000)
     --> >>npm run client-start 
      ------> (this starts the client at :3000, and if there are multiple instances, it will prompt you to 
                                 listen at port 300X instead.)

What's new 2.1:
 - Collection total cost added
 - Added edit collection name and description function
 - Updated nomenclature to be more in line with best practices (this may change again in the future)
  --> folders will have xx_yy
  --> filenames will have xx-yy.zz
  --> classnames will have XxYy
  --> variables and constants will have xxYy
 - Refactored the overall project structure to be more intuitive

  
What's new 2.0:
 - Added SVG image for the mana costs
 - Implemented Pagination for collection
 - Prettified the collection
 - Changed image view to embed from hover
 - Added some error handling
 - Optimize some backend and frontend code so the program runs faster
 - Documentation

Known bugs:

What's to come:
 - Splitting of user-build and admin-build (default is admin build)
 - Ability to upload your collection
 - Ability to set up database