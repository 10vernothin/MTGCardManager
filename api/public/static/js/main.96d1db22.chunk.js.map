{"version":3,"sources":["common/images/image_src/208_pwSymbol_01.jpg","common/images/mana_symbols sync /.svg$","common/images/mana_symbols/symbol_id_0.svg","common/images/mana_symbols/symbol_id_1.svg","common/images/mana_symbols/symbol_id_10.svg","common/images/mana_symbols/symbol_id_11.svg","common/images/mana_symbols/symbol_id_12.svg","common/images/mana_symbols/symbol_id_13.svg","common/images/mana_symbols/symbol_id_14.svg","common/images/mana_symbols/symbol_id_15.svg","common/images/mana_symbols/symbol_id_16.svg","common/images/mana_symbols/symbol_id_17.svg","common/images/mana_symbols/symbol_id_18.svg","common/images/mana_symbols/symbol_id_19.svg","common/images/mana_symbols/symbol_id_2.svg","common/images/mana_symbols/symbol_id_20.svg","common/images/mana_symbols/symbol_id_21.svg","common/images/mana_symbols/symbol_id_22.svg","common/images/mana_symbols/symbol_id_23.svg","common/images/mana_symbols/symbol_id_24.svg","common/images/mana_symbols/symbol_id_25.svg","common/images/mana_symbols/symbol_id_26.svg","common/images/mana_symbols/symbol_id_27.svg","common/images/mana_symbols/symbol_id_28.svg","common/images/mana_symbols/symbol_id_29.svg","common/images/mana_symbols/symbol_id_3.svg","common/images/mana_symbols/symbol_id_30.svg","common/images/mana_symbols/symbol_id_31.svg","common/images/mana_symbols/symbol_id_32.svg","common/images/mana_symbols/symbol_id_33.svg","common/images/mana_symbols/symbol_id_34.svg","common/images/mana_symbols/symbol_id_35.svg","common/images/mana_symbols/symbol_id_36.svg","common/images/mana_symbols/symbol_id_37.svg","common/images/mana_symbols/symbol_id_38.svg","common/images/mana_symbols/symbol_id_39.svg","common/images/mana_symbols/symbol_id_4.svg","common/images/mana_symbols/symbol_id_40.svg","common/images/mana_symbols/symbol_id_41.svg","common/images/mana_symbols/symbol_id_42.svg","common/images/mana_symbols/symbol_id_43.svg","common/images/mana_symbols/symbol_id_44.svg","common/images/mana_symbols/symbol_id_45.svg","common/images/mana_symbols/symbol_id_46.svg","common/images/mana_symbols/symbol_id_47.svg","common/images/mana_symbols/symbol_id_48.svg","common/images/mana_symbols/symbol_id_49.svg","common/images/mana_symbols/symbol_id_5.svg","common/images/mana_symbols/symbol_id_50.svg","common/images/mana_symbols/symbol_id_51.svg","common/images/mana_symbols/symbol_id_52.svg","common/images/mana_symbols/symbol_id_53.svg","common/images/mana_symbols/symbol_id_54.svg","common/images/mana_symbols/symbol_id_55.svg","common/images/mana_symbols/symbol_id_56.svg","common/images/mana_symbols/symbol_id_57.svg","common/images/mana_symbols/symbol_id_58.svg","common/images/mana_symbols/symbol_id_59.svg","common/images/mana_symbols/symbol_id_6.svg","common/images/mana_symbols/symbol_id_60.svg","common/images/mana_symbols/symbol_id_61.svg","common/images/mana_symbols/symbol_id_62.svg","common/images/mana_symbols/symbol_id_63.svg","common/images/mana_symbols/symbol_id_7.svg","common/images/mana_symbols/symbol_id_8.svg","common/images/mana_symbols/symbol_id_9.svg","common/cached_data/SessionInfo.js","common/elements/CommonButtons.js","pages/home/elements/Buttons.js","pages/home/elements/PlaneswalkerSymbol.js","pages/home/HomePage.js","pages/home/UserListingPage.js","pages/login/elements/Buttons.js","common/functions/CallAPI.js","pages/login/LoginPage.js","pages/login/SignupPage.js","pages/listing/elements/Buttons.js","common/images/CardImagePanel.js","pages/listing/elements/ListingsTableElem.js","pages/listing/elements/ListingsTable.js","pages/listing/ListingsMainPage.js","common/elements/PopupWindow.js","pages/listing/elements/SearchPopupBody.js","pages/listing/elements/FileUploadPopupBody.js","pages/listing/CreateCollectionPage.js","common/functions/ReadCurrURLParamsAsJSON.js","pages/listing/EditCollectionPage.js","pages/download/DownloadPage.js","pages/collection/elements/Buttons.js","common/cached_data/ManaCostWebkit.js","common/functions/ReplaceManaCostWithSVGSymbol.js","common/images/ManaCostPanel.js","pages/collection/elements/CollectionTableElement.js","pages/collection/elements/CollectionPageNavPanel.js","pages/collection/elements/CollectionTable.js","pages/collection/elements/CollectionTableListForm.js","pages/collection/elements/SearchResultElement.js","pages/collection/elements/SearchBox.js","pages/collection/CollectionPage.js","pages/DBsetup/elements/SetupChangeForm.js","pages/DBsetup/elements/SetupCurrentSettingsTable.js","pages/DBsetup/elements/CreateNewDBForm.js","pages/DBsetup/SetupPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","SessionInfo","undefined","this","resetSession","initializeSession","ColName","LoginID","ColID","LoginName","isAuth","auth","LoginUser","CollectionName","CollectionID","UserID","HomeButton","to","type","Component","SignoutButton","signout","preventDefault","window","confirm","props","history","push","onClick","CollectionListButton","LoginButton","DownloadBulkDataButton","ButtonTextChange","state","disabled","fetch","then","res","json","ress","setState","UserListButton","variant","SetupDBButton","PlaneswalkerSymbol","src","PWimage","alt","HomePage","class","renderWelcomeUser","renderLoginCollectionButton","renderDBButton","getSessionUser","getSessionStatus","UserListingPage","getList","list","className","length","item","SignupButton","callAPI","uri","dataHandlerFunction","a","opts","response","status","data","error","loaded","fetching","LoginPage","renderLoginForm","method","onSubmit","handleSubmit","name","value","formControls","onChange","handleChange","password","postResponse","err","parsedbody","setSessionState","setLoginUser","username","setLoginUserID","pathname","search","page","headers","body","JSON","stringify","target","alert","SignupPage","renderSignupForm","email","text","CreateCollectionButton","SelectCollectionButton","link_url","EditCollectionButton","PopupButton","popup","DeleteCollectionButton","deleteCollection","collectionID","updateTopmostState","col_id","CardImagePanel","loadImage","cardObj","image_type","result","cardImageURI","cardImageObj","imageType","imgType","loadImageByID","card_id","defaultCSS","width","height","padding","margin","paramsType","style","toString","itemName","ListingsTableElement","renderTableElem","collection_name","currCSS","flex","description","card_count","sum","edit_url","handleJSONDownload","handleCSVDownload","loadChanges","showcase_card_id","loadCardObj","obj","callback","id_key","blob","url","URL","createObjectURL","document","createElement","href","download","click","ListingsTable","renderListingTitle","renderListingItems","collectionList","ListingsTableElem","encodeURIComponent","updateState","loadList","postresponse","userID","getSessionUserID","ListingsMainPage","loading","bind","PopupWindow","content","closePopup","SearchPopupBody","renderSearchBox","backgroundColor","display","cardName","changeHandler","right","cardID","submittable","renderResults","setChosenCard","event","parse","catch","setPreviewThenTogglePopup","info","SearchPopupElement","handleSelect","set","toUpperCase","FileUploadPopupBody","filename","accept","fileContent","loadFileContent","reader","FileReader","onload","file","readAsText","files","setFileUploadThenTogglePopup","CreateCollectionPage","renderPopup","Popup","showPopup","togglePopup","defaultPreview","preview","handleCardSearch","handleFileUpload","handleClearFile","flag","previewCardName","newformControls","desc","renderForm","cols","wrap","readCurrURLParamsAsJSON","params","string","location","split","forEach","items","concat","decodeURIComponent","substring","EditCollectionPage","renderPopupWindow","loadDefaultValue","filter","newFormControls","replace","resp","DownloadPage","redirect","readURLAsJSONAPIString","fetchpath","func","goBack","slice","SwitchToListViewButton","SwitchToFullViewButton","ManaCostWebkit","retrieveWebkit","listOfManaIcons","require","replaceManaCostWithSVGSymbol","stringRepresentation","listOfCosts","sym","resolved_list","ManaCostPanel","updateManaCost","mana_cost","layout","card_faces","join","listURL","listFileName","trim","listSVGFiles","listofManaSymbols","p","includes","i","key","listofSVGs","message","renderManaSymbol","size","AddRemoveButtonCSS","font","CollectionTableElement","renderRowElement","resBoxCSS","rarity","type_line","set_name","set_id","cardInfo","is_foil","prices","usd_foil","usd","amt","handleAddCard","handleRemoveCard","loadRowObjs","chosenIsFoil","getCollectionID","CollectionPageNavPanel","renderNavPanel","totalElems","renderPageNavigator","maxPages","currPage","handleAnyPage","Array","fill","_v","index","loadDisabled","last","next","Math","ceil","elemPerPage","nextDisabled","lastDisabled","handlePrevPage","handleChangeAnyPage","parseInt","handleNextPage","max","navPage","CollectionTable","disableAll","renderTableTitle","renderTableBody","loadSortedList","renderTableElems","valueOf","sort","b","card_name","localeCompare","set_code","pageNumber","collectionName","getCollectionName","CollectionTableListForm","renderNavigationPanel","renderTable","renderListPanel","loadDefaultSortedList","currIndex","renderListByCMC","renderListByColors","renderListBySet","renderListByPrice","renderListDefaultSort","renderListElement","showprice","f","price","priceStr","Number","parseFloat","toFixed","fontWeight","renderDropdownPanel","handleSortMethodChange","sortIndices","newlist","a_price","renderListByType","cmc","prevCMC","multiList","colors","colorlessList","monoList","ind","renderMulticolorSublist","renderMonocolorSublist","renderColorlessSublist","newPageTrigger","prevColor","colorKeys","n","lstOfIds","sortIndexKeys","ImageCSS","position","top","left","HiddenImageCSS","SearchResultElement","handleMouseEnter","newBoxStyle","boxStyle","color","showImage","handleMouseLeave","hideImage","handleCardMouseDown","nonfoilBox","handleFoilMouseDown","foilBox","handleCardMouseUp","newFoilBoxStyle","selectFoil","selectCard","imageCSS","border","titleBox","selectBox","onMouseEnter","onMouseLeave","image_uris","border_crop","nonfoil","onMouseDown","onMouseUp","foil","SearchBox","searchResultsList","CollectionPage","renderButtonMenu","asList","handleViewSwitch","renderSearchBar","renderCollectionBar","renderCardTable","cardTableProps","loadTable","newCardTableProps","userName","readCurrURLParamsAsJSONString","setCollectionName","collection","setCollectionID","SetupChangeForm","renderSetupDBForm","correctBoxCSS","handleTestConnection","testResponse","host","port","min","database","user","passwordType","handleShowPassword","handleHidePassword","handleCancel","loadDefault","defaultResult","setTopState","changeSetup","postResp","SetupCurrentSettingsTable","renderCurrentSettingsTable","currentSetting","HOST","PORT","DB","USER","STATUS","newcurrentSetting","report","CreateNewDBForm","renderCreateDBForm","placeholder","match","SetupPage","renderSetupPage","handleToggleChangeSetup","handleToggleCreateDB","offline","handleTableReload","reloadable","console","log","newstate","App","exact","path","component","withRouter","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oLAAAA,EAAOC,QAAU,IAA0B,6C,gGCA3C,IAAIC,EAAM,CACT,oBAAqB,GACrB,oBAAqB,GACrB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,oBAAqB,GACrB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,oBAAqB,GACrB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,oBAAqB,GACrB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,oBAAqB,GACrB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,GACtB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,oBAAqB,IACrB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,oBAAqB,IACrB,oBAAqB,IACrB,oBAAqB,KAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,I,gBCrFpBL,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,Q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","file":"static/js/main.96d1db22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/208_pwSymbol_01.ab9ed648.jpg\";","var map = {\n\t\"./symbol_id_0.svg\": 49,\n\t\"./symbol_id_1.svg\": 50,\n\t\"./symbol_id_10.svg\": 51,\n\t\"./symbol_id_11.svg\": 52,\n\t\"./symbol_id_12.svg\": 53,\n\t\"./symbol_id_13.svg\": 54,\n\t\"./symbol_id_14.svg\": 55,\n\t\"./symbol_id_15.svg\": 56,\n\t\"./symbol_id_16.svg\": 57,\n\t\"./symbol_id_17.svg\": 58,\n\t\"./symbol_id_18.svg\": 59,\n\t\"./symbol_id_19.svg\": 60,\n\t\"./symbol_id_2.svg\": 61,\n\t\"./symbol_id_20.svg\": 62,\n\t\"./symbol_id_21.svg\": 63,\n\t\"./symbol_id_22.svg\": 64,\n\t\"./symbol_id_23.svg\": 65,\n\t\"./symbol_id_24.svg\": 66,\n\t\"./symbol_id_25.svg\": 67,\n\t\"./symbol_id_26.svg\": 68,\n\t\"./symbol_id_27.svg\": 69,\n\t\"./symbol_id_28.svg\": 70,\n\t\"./symbol_id_29.svg\": 71,\n\t\"./symbol_id_3.svg\": 72,\n\t\"./symbol_id_30.svg\": 73,\n\t\"./symbol_id_31.svg\": 74,\n\t\"./symbol_id_32.svg\": 75,\n\t\"./symbol_id_33.svg\": 76,\n\t\"./symbol_id_34.svg\": 77,\n\t\"./symbol_id_35.svg\": 78,\n\t\"./symbol_id_36.svg\": 79,\n\t\"./symbol_id_37.svg\": 80,\n\t\"./symbol_id_38.svg\": 81,\n\t\"./symbol_id_39.svg\": 82,\n\t\"./symbol_id_4.svg\": 83,\n\t\"./symbol_id_40.svg\": 84,\n\t\"./symbol_id_41.svg\": 85,\n\t\"./symbol_id_42.svg\": 86,\n\t\"./symbol_id_43.svg\": 87,\n\t\"./symbol_id_44.svg\": 88,\n\t\"./symbol_id_45.svg\": 89,\n\t\"./symbol_id_46.svg\": 90,\n\t\"./symbol_id_47.svg\": 91,\n\t\"./symbol_id_48.svg\": 92,\n\t\"./symbol_id_49.svg\": 93,\n\t\"./symbol_id_5.svg\": 94,\n\t\"./symbol_id_50.svg\": 95,\n\t\"./symbol_id_51.svg\": 96,\n\t\"./symbol_id_52.svg\": 97,\n\t\"./symbol_id_53.svg\": 98,\n\t\"./symbol_id_54.svg\": 99,\n\t\"./symbol_id_55.svg\": 100,\n\t\"./symbol_id_56.svg\": 101,\n\t\"./symbol_id_57.svg\": 102,\n\t\"./symbol_id_58.svg\": 103,\n\t\"./symbol_id_59.svg\": 104,\n\t\"./symbol_id_6.svg\": 105,\n\t\"./symbol_id_60.svg\": 106,\n\t\"./symbol_id_61.svg\": 107,\n\t\"./symbol_id_62.svg\": 108,\n\t\"./symbol_id_63.svg\": 109,\n\t\"./symbol_id_7.svg\": 110,\n\t\"./symbol_id_8.svg\": 111,\n\t\"./symbol_id_9.svg\": 112\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/symbol_id_0.edcd7874.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_1.45b45f0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_10.26c84b15.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_11.7a34f769.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_12.03f08dd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_13.304c987e.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_14.a01fca40.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_15.7c0af7f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_16.34951976.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_17.c0d22678.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_18.00e473ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_19.467d1575.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_2.11fbfa25.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_20.363ef301.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_21.108ad36b.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_22.fcb14f0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_23.73284f3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_24.c75c4c27.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_25.2ed65305.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_26.177486b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_27.9e3c6af6.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_28.cb3ca879.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_29.e6e48b74.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_3.72f5d34b.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_30.547222e3.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_31.4b9e7bcd.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_32.142f1e6f.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_33.26c05ea2.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_34.5c514123.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_35.dc2d4ae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_36.2a36aa27.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_37.99723549.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_38.1be3e9b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_39.0e8dbdfa.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_4.9021a8e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_40.58e44aa6.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_41.8481aae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_42.0fc56214.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_43.f82bf1fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_44.9d15839d.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_45.d1678570.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_46.33f20a0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_47.f0579746.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_48.815635e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_49.09f701c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_5.840dffff.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_50.7caa5c21.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_51.d54663a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_52.0a0efd31.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_53.ff955daf.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_54.79ace74a.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_55.a1b6963c.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_56.5116042e.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_57.1e69196c.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_58.e000fcce.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_59.8417e159.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_6.1b2a0cc9.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_60.0b843b2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_61.d4006bb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_62.d7efd0c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_63.2bf5840f.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_7.82e811b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_8.2d0ca8d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol_id_9.380cb590.svg\";","class SessionInfo {\r\n\r\n    static #LoginUser;\r\n    static #LoginUserID;\r\n    static #isAuth;\r\n    static #CollectionName;\r\n    static #CollectionID;\r\n\r\n    static initializeSession() {\r\n        if ((this.#LoginUser === undefined) && (this.#isAuth === undefined) && (this.#CollectionName === undefined)) {\r\n            SessionInfo.resetSession();\r\n        }\r\n    }\r\n    static getSessionUser() {\r\n        SessionInfo.initializeSession()\r\n        return this.#LoginUser;\r\n    };\r\n\r\n    static getSessionUserID() {\r\n        SessionInfo.initializeSession()\r\n        return this.#LoginUserID;\r\n    };\r\n\r\n    static getCollectionName() {\r\n        SessionInfo.initializeSession()\r\n        return this.#CollectionName;\r\n    };\r\n\r\n    static getCollectionID() {\r\n        SessionInfo.initializeSession()\r\n        return this.#CollectionID;\r\n    };\r\n\r\n    static getSessionStatus() {\r\n        SessionInfo.initializeSession()\r\n        return this.#isAuth;\r\n    }\r\n\r\n    static resetSession() {\r\n        this.#CollectionName = '';\r\n        this.#LoginUserID = 0;\r\n        this.#CollectionID = 0;\r\n        this.#LoginUser = '';\r\n        this.#isAuth = false;\r\n    }\r\n\r\n    static getSessionInfo() { \r\n        SessionInfo.initializeSession()\r\n        return ({\r\n            ColName: this.#CollectionName, \r\n            LoginID: this.#LoginUserID, \r\n            ColID: this.#CollectionID, \r\n            LoginName: this.#LoginUser, \r\n            isAuth: this.#isAuth})\r\n    }\r\n    \r\n    static setSessionState(auth) {\r\n        SessionInfo.initializeSession()\r\n        this.#isAuth = auth;\r\n    }\r\n\r\n    static setLoginUser(LoginUser) {\r\n        SessionInfo.initializeSession()\r\n        this.#LoginUser = LoginUser;\r\n    }\r\n\r\n    static setCollectionName(CollectionName) {\r\n        SessionInfo.initializeSession()\r\n        this.#CollectionName = CollectionName;\r\n    }\r\n\r\n    static setCollectionID(CollectionID) {\r\n        SessionInfo.initializeSession()\r\n        this.#CollectionID = CollectionID;\r\n    }\r\n\r\n    static setLoginUserID(UserID) {\r\n        SessionInfo.initializeSession()\r\n        this.#LoginUserID = UserID;\r\n    }\r\n\r\n};\r\n\r\nexport default SessionInfo;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SessionInfo from '../cached_data/SessionInfo';\r\n\r\nclass HomeButton extends Component {\r\n  //Button that links to the Home page\r\n  render() {\r\n      return (<Link to={'./'}><button type= \"button\">Home</button></Link>);\r\n    }\r\n  }\r\n\r\nclass SignoutButton extends Component {\r\n  //Button that Signs out and returns to Home page\r\n\r\n  signout = e => {\r\n      e.preventDefault();\r\n      if (window.confirm(\"Are you sure you want to log out?\")){\r\n        SessionInfo.resetSession();\r\n        this.props.history.push('./')\r\n      }\r\n  }\r\n\r\n  render() {\r\n  return(<button type= \"button\" onClick = {this.signout}>Sign Out</button>);\r\n  } \r\n}\r\n\r\nclass CollectionListButton extends Component {\r\n  //Button that links to the CollectionsList page\r\n  render() {\r\n    return (<Link to={'./collections?page=default'}><button type= \"button\">Your Collections</button></Link>);\r\n  }\r\n}\r\n\r\nclass LoginButton extends Component {\r\n  //Button the links to the Login page\r\n  render() {\r\n    return (<Link to={'./login'}><button type= \"button\">Login</button></Link>);\r\n  }\r\n}\r\n\r\n\r\nexport {  \r\n  HomeButton,\r\n  SignoutButton, \r\n  CollectionListButton, \r\n  LoginButton\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass DownloadBulkDataButton extends Component {\r\n  //Button that downloads Scryfall data. Should only be accessed at most once per day, and will be disabled otherwise\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      disabled: true\r\n    }\r\n  }\r\n\r\n  //Checks if the data needs updating. The button will be enabled only if it does needs updating.\r\n  componentDidMount() {\r\n    fetch('/api/fetch-card/check-updateable')\r\n      .then((res) => { return res.json() })\r\n      .then((ress) => {\r\n        if (ress === -1) {\r\n          this.setState({ disabled: false });\r\n        } else {\r\n          this.setState({ disabled: true });\r\n        }\r\n      });\r\n  }\r\n\r\n  //Changes the button text to reflect status of data\r\n  ButtonTextChange = () => {\r\n    if (!(this.state.disabled)) {\r\n      return \"Update Scryfall Data\";\r\n    } else {\r\n      return \"Data Up to Date\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (<Link to={'./downloads?func=fetch-card%2Fdownload-bulk-data'}><button type=\"button\" disabled={this.state.disabled} >{this.ButtonTextChange()}{this.state.disabled}</button></Link>);\r\n  }\r\n}\r\nclass UserListButton extends Component {\r\n  render() {\r\n    return (\r\n      <Link to={'./userlist'}>\r\n        <button variant=\"raised\">\r\n          Users\r\n        </button>\r\n      </Link>\r\n    )\r\n  }\r\n}\r\n\r\nclass SetupDBButton extends Component {\r\n  render() {\r\n    return (\r\n      <Link to={'./setup'}>\r\n        <button variant=\"raised\">\r\n          Set up Database\r\n        </button>\r\n      </Link>)\r\n  }\r\n}\r\n\r\nexport {\r\n  DownloadBulkDataButton,\r\n  UserListButton,\r\n  SetupDBButton\r\n};","import React, { Component } from 'react';\r\nimport PWimage from '../../../common/images/image_src/208_pwSymbol_01.jpg';\r\n\r\nclass PlaneswalkerSymbol extends Component {\r\n    //Container for the Planeswalker image\r\n    render() {\r\n        return (<img src={PWimage} alt=\"PW Symbol\"/>)\r\n    }\r\n}\r\n\r\nexport default PlaneswalkerSymbol;","import React, { Component } from 'react';\nimport {LoginButton, CollectionListButton} from '../../common/elements/CommonButtons';\nimport {DownloadBulkDataButton, UserListButton, SetupDBButton} from './elements/Buttons'\nimport SessionInfo from '../../common/cached_data/SessionInfo';\nimport PlaneswalkerSymbol from './elements/PlaneswalkerSymbol';\nimport './css/Home.css'\n\nclass HomePage extends Component {\n\n  render() {\n    return (\n    <div class='home_page'>\n        <div><h1>MTG Card Manager</h1></div>\n        <div>{this.renderWelcomeUser()}</div>\n        <div><PlaneswalkerSymbol/></div>\n        <div>\n          <UserListButton/>\n          {this.renderLoginCollectionButton()}\n          {this.renderDBButton()}\n          <DownloadBulkDataButton/>\n        </div>\n    </div>\n    );\n  }\n\n  //Render functions\n\n  renderWelcomeUser() {\n      //alert(SessionInfo.getSessionUser());\n      if (!(SessionInfo.getSessionUser() === '')) {\n        return (<h1> Welcome {SessionInfo.getSessionUser()} </h1>)\n      } else {\n        return null;\n      }\n  }\n\n  renderLoginCollectionButton() {\n    return (SessionInfo.getSessionStatus() === true ? <CollectionListButton/>: <LoginButton/>)\n  }\n\n  renderDBButton() {\n    return (SessionInfo.getSessionStatus() === true ? null: <SetupDBButton/>)\n  }\n  \n}\nexport default HomePage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserListingPage extends Component {\n  // Initialize the state\n  constructor(props){\n    super(props);\n    this.state = {\n      list: []\n    }\n  }\n\n  // Fetch the list on first mount\n  componentDidMount() {\n    this.getList();\n  }\n\n  // Retrieves the list of items from the Express app\n  getList = () => {\n    fetch('/api/getList')\n    .then(res => res.json())\n    .then(list => this.setState({ list }))\n  }\n\n  render() {\n    const { list } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>List of Users</h1>\n        {/* Check to see if any items are found*/}\n        {list.length ? (\n          <div>\n            {/* Render the list of items */}\n            {list.map((item) => {\n              return(\n                <div>\n                  {item}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div>\n            <h2>No Users Found</h2>\n          </div>\n        )\n      }\n            <Link to={'./'}><button type= \"button\">Back to Homepage</button></Link>\n      </div>\n    );\n  }\n}\n\nexport default UserListingPage;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass SignupButton extends Component {\r\n    //Button that links to the Sign-Up page\r\n    render() {\r\n      return (<Link to={'./signup'}><button type= \"button\">Sign Up Now!</button></Link>);\r\n    }\r\n}\r\n\r\nexport {\r\n    SignupButton\r\n}","/**\r\n * @param {string} uri - The API uri\r\n * @param {any} options - the options given to fetch API, most likely form data\r\n * @param {(data,err) =>{}} dataHandlerFunction - Callback function\r\n * callAPI(uri, options, {}) Returns (data, err) for callback\r\n */\r\nexport default async function callAPI (uri, dataHandlerFunction, opts = undefined) {\r\n    const response = await fetch(uri, opts)\r\n    const { data, status } = {\r\n        data: await response.json(),\r\n        status: response.status\r\n    }\r\n    // error? \r\n    // no error\r\n    if (dataHandlerFunction) {\r\n        return dataHandlerFunction(data, (status !== 200? true: null))\r\n    } else {\r\n        return ({\r\n            data,\r\n            error: null,\r\n            loaded: true,\r\n            fetching: false,\r\n        })\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\nimport { HomeButton } from '../../common/elements/CommonButtons';\nimport SessionInfo from '../../common/cached_data/SessionInfo';\nimport { SignupButton } from './elements/Buttons';\nimport callAPI from '../../common/functions/CallAPI';\n\nclass LoginPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      formControls: { name: { value: '' }, password: { value: '' } },\n      postResponse: ''\n    }\n  }\n\n  componentDidCatch(error) {\n    alert(\"LoginPage \" + error)\n  }\n\n  render() {\n    return (this.renderLoginForm())\n  }\n\n  //Render Methods\n\n  renderLoginForm = () => {\n    return (\n      <form method=\"post\" onSubmit={this.handleSubmit}>\n        <title>Login Form</title>\n        <div>Login</div>\n        <div>Name:</div>\n        <input type=\"text\"\n          name=\"name\"\n          value={this.state.formControls.name.value}\n          onChange={this.handleChange}\n        />\n        <div>Password:</div>\n        <input type=\"password\"\n          name=\"password\"\n          value={this.state.formControls.password.value}\n          onChange={this.handleChange}\n        />\n        <div>\n          <button type=\"submit\">Submit</button>\n          <HomeButton />\n          <SignupButton />\n        </div>\n        {this.state.postResponse}\n      </form>\n    );\n  }\n\n  //Handler Methods\n\n  handleSubmit = e => {\n    e.preventDefault();\n    callAPI('/api/login/submit-form',\n      (res, err) => {\n        if (err) {\n          this.setState({ postResponse: \"Login Failed.\" })\n        } else {\n          const parsedbody = res;\n          SessionInfo.setSessionState(true);\n          SessionInfo.setLoginUser(parsedbody.username);\n          SessionInfo.setLoginUserID(parsedbody.id);\n          this.props.history.push({\n            pathname: '/collections',\n            search: '?page=default',\n            state: { page: \"default\" }\n          })\n        }\n      },\n      {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(this.state)\n      }\n    )\n  }\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      formControls: {\n        ...this.state.formControls,\n        [name]: {\n          ...this.state.formControls[name],\n          value\n        }\n      }\n    })\n  }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {HomeButton} from '../../common/elements/CommonButtons'\r\n\r\n\r\nclass SignupPage extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        formControls: { name: {value: ''}, password: {value: ''}, email: {value: ''}},\r\n        postResponse: ''\r\n  }}\r\n\r\n  render() {\r\n    return(this.renderSignupForm())\r\n  }\r\n\r\n  //Render Methods\r\n\r\n  renderSignupForm = () => {\r\n    return (\r\n\t\t  <form method=\"post\" onSubmit={this.handleSubmit}>\r\n        <title>Signup Form</title>\r\n\t\t\t\t<div>Sign Up Today!</div>\r\n        <div>Email:</div>\r\n        <input  type=\"text\" \r\n                name=\"email\" \r\n                value={this.state.formControls.email.value} \r\n                onChange={this.handleChange} \r\n        />\r\n        <div>Name:</div>\r\n        <input type=\"text\" \r\n                name=\"name\" \r\n                value={this.state.formControls.name.value} \r\n                onChange={this.handleChange} \r\n        />\r\n        <div>Password:</div>\r\n        <input type=\"password\" \r\n                name=\"password\" \r\n                value={this.state.formControls.password.value} \r\n                onChange={this.handleChange} \r\n        />\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n          <HomeButton/>\r\n          <Link to={'./login'}><button type= \"button\">Back</button></Link>\r\n        </div>\r\n        <p>{this.state.postResponse}</p>\r\n      </form>      \r\n  );}\r\n\r\n  //Handler Methods\r\n  \r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/create-new-user', \r\n      {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(this.state)\r\n    });\r\n    const body = await response.text();\r\n    this.setState({ postResponse: body});\r\n  };\r\n  \r\n  handleChange = e => { \r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      this.setState({\r\n        formControls: {\r\n            ...this.state.formControls,\r\n            [name]: {\r\n            ...this.state.formControls[name],\r\n            value\r\n  }}});}\r\n\r\n}\r\n\r\nexport default SignupPage;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass CreateCollectionButton extends Component {\r\n  //Button that links to the Create New Collection page\r\n  render() {\r\n    return (<Link to={'./collections?page=create-new-collection'}><button type=\"button\">Create New Collection</button></Link>);\r\n  }\r\n}\r\n\r\nclass SelectCollectionButton extends Component {\r\n  //Button that accesses the chosen Collection\r\n  render() {\r\n    return (\r\n      <Link to={this.props.link_url}>\r\n        <button type=\"button\">Select</button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditCollectionButton extends Component {\r\n\r\n  //Button that accesses the chosen Collection for deletion\r\n  render() {\r\n    return (\r\n      <Link to={this.props.link_url}>\r\n        <button type=\"button\">Edit</button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nclass PopupButton extends Component {\r\n  render() {\r\n    let button = <button type=\"button\" onClick={this.props.popup}>{this.props.text}</button>\r\n    return (button);\r\n  }\r\n}\r\n\r\nclass DeleteCollectionButton extends Component {\r\n  //Button that deletes the chosen collection \r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      id: this.props.col_id\r\n    }\r\n  }\r\n\r\n\r\n  deleteCollection = e => {\r\n    e.preventDefault()\r\n    const confirmationMsg = \"Are you sure you want to delete this collection?\"\r\n    if (window.confirm(confirmationMsg)) {\r\n      fetch('/api/collections/delete-collection',\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ collectionID: this.state.id })\r\n        }\r\n      ).then(\r\n        () => {\r\n          this.props.updateTopmostState()\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!(this.state.id === this.props.col_id)) {\r\n      this.setState({ id: this.props.col_id })\r\n      return (null)\r\n    } else {\r\n      return (<button type=\"button\" onClick={this.deleteCollection}>Delete</button>);\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport {\r\n  CreateCollectionButton,\r\n  PopupButton,\r\n  SelectCollectionButton,\r\n  DeleteCollectionButton,\r\n  EditCollectionButton\r\n};","import React, {Component} from 'react';\r\n\r\nclass CardImagePanel extends Component {\r\n\r\n  constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            defaultCSS: {width:'100%', height:'100%', padding:'0', margin:'0'},\r\n            cardImageURI: '',\r\n            cardImageObj: '',\r\n            imageType: ''\r\n  }}\r\n\r\n  render() {\r\n        if (this.props.paramsType === 'id') {\r\n          this.loadImageByID(this.props.id, this.props.imgType)\r\n        } else {\r\n          this.loadImage(this.props.cardObj, this.props.imgType)\r\n        }\r\n        let imagePanel =\r\n        (this.state.cardImageObj === '' || this.state.imageType === '')?\r\n            (this.state.cardImageURI === '')?\r\n                  //if all fails\r\n                  <div style={this.state.defaultCSS}></div>:\r\n                  //if fetching image data fails\r\n                  <img \r\n                    src={this.state.cardImageURI} \r\n                    alt={this.state.cardImageURI} \r\n                    style={this.state.defaultCSS}\r\n                  />\r\n        :\r\n                <img\r\n                    src={`data:img/${this.state.imageType};base64,${this.state.cardImageObj.toString('base64')}`} \r\n                    alt={this.state.itemName} \r\n                    style={this.state.defaultCSS}\r\n                />\r\n      return (imagePanel)\r\n  }\r\n\r\n  //Loader Functions\r\n  \r\n  loadImage = (cardObj, image_type) => {\r\n    if (!(cardObj === undefined || cardObj === '')) {\r\n        fetch('/api/cards/retrieve-cached-image', {\r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                cardObj: cardObj,\r\n                image_type: image_type})\r\n        })\r\n        .then((res) => {return res.json()})\r\n        .then((result) =>{      \r\n          if (!(this.state.cardImageURI === result.uri)) {\r\n            this.setState( \r\n              {cardImageObj: result.data,\r\n                cardImageURI: result.uri,\r\n                imageType: result.imgType \r\n  })}})}}\r\n\r\n  loadImageByID = (id, image_type) => {\r\n    fetch('/api/collections/fetch-card-object', \r\n    { \r\n      method: 'POST', \r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({card_id: id})\r\n    })\r\n    .then((res) => {return res.json()})\r\n    .then((result) =>{ \r\n      this.loadImage(result[0], image_type)\r\n  })}\r\n\r\n}\r\n      \r\n\r\nexport default CardImagePanel","import React, { Component } from 'react';\r\nimport { EditCollectionButton, SelectCollectionButton, DeleteCollectionButton } from './Buttons'\r\nimport CardImagePanel from '../../../common/images/CardImagePanel';\r\nimport callAPI from '../../../common/functions/CallAPI';\r\n\r\n\r\nclass ListingsTableElement extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      item: '',\r\n      id_key: this.props.id_key,\r\n      cardObj: '',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.loadChanges();\r\n    return (this.renderTableElem())\r\n  }\r\n\r\n  //Render Methods\r\n\r\n  renderTableElem = () => {\r\n    let item = this.state.item;\r\n    if (!(item.collection_name === '')) {\r\n      return (\r\n        <div class={this.props.currCSS}>\r\n          <div style={{ flex: 2 }} class='shrunk_preview_panel'>\r\n            <CardImagePanel\r\n              cardObj={this.state.cardObj}\r\n              imgType={{ type: 'art_crop' }}\r\n            />\r\n          </div>\r\n          <div style={{ flex: 2 }}>{item.collection_name}</div>\r\n          <div style={{ flex: 7 }}>{item.description}</div>\r\n          <div style={{ flex: 1 }}>{item.card_count}</div>\r\n          <div style={{ flex: 1 }}>${item.sum}</div>\r\n          <div style={{ flex: 2 }}>\r\n            <SelectCollectionButton link_url={this.props.link_url} />\r\n            <EditCollectionButton link_url={this.props.edit_url} />\r\n            <DeleteCollectionButton col_id={item.id} updateTopmostState={this.props.updateTopmostState} />\r\n          </div>\r\n          <div style={{ flex: 1 }}>\r\n            <button onClick={this.handleJSONDownload}>As JSON</button>\r\n          </div>\r\n          <div style={{ flex: 1 }}>\r\n            <button onClick={this.handleCSVDownload}>As CSV</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (null);\r\n    }\r\n  }\r\n\r\n  //Loader Methods\r\n\r\n  loadChanges = () => {\r\n    if (!(JSON.stringify(this.state.item) === JSON.stringify(this.props.item))) {\r\n      if (this.props.item.showcase_card_id === 0) {\r\n        this.setState({ item: this.props.item })\r\n      } else {\r\n        this.loadCardObj(this.props.item.showcase_card_id, (obj) => {\r\n          this.setState({\r\n            item: this.props.item,\r\n            cardObj: obj\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  loadCardObj = (id, callback) => {\r\n    callAPI('/api/collections/fetch-card-object',\r\n      (cardObj, err) => {\r\n        if (!err) {\r\n          cardObj = cardObj[0]\r\n          if (!(cardObj === undefined)) {\r\n            callback(cardObj);\r\n          } else { \r\n            callback('')\r\n          }\r\n        } else {\r\n          alert(err)\r\n        }\r\n      },\r\n      {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ card_id: id })\r\n      })\r\n  }\r\n\r\n  //Handler Methods\r\n\r\n  handleJSONDownload = () => {\r\n    fetch('/api/collections/fetch-collection-as-JSON', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id: this.state.id_key })\r\n    })\r\n      .then((res) => {\r\n        //this snippet of code downloads the file\r\n        res.blob().then((blob) => {\r\n          let url = window.URL.createObjectURL(blob);\r\n          let a = document.createElement('a');\r\n          a.href = url;\r\n          a.download = `${this.state.item.collection_name}.json`;\r\n          a.click();\r\n        })\r\n      })\r\n  }\r\n\r\n  handleCSVDownload = () => {\r\n    fetch('/api/collections/fetch-collection-as-CSV', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ id: this.state.id_key })\r\n    })\r\n      .then((res) => {\r\n        //this snippet of code downloads the file\r\n        res.blob().then((blob) => {\r\n          let url = window.URL.createObjectURL(blob);\r\n          let a = document.createElement('a');\r\n          a.href = url;\r\n          a.download = `${this.state.item.collection_name}.csv`;\r\n          a.click();\r\n        })\r\n      })\r\n  }\r\n\r\n}\r\n\r\nexport default ListingsTableElement;\r\n","import React, { Component } from 'react';\r\nimport SessionInfo from '../../../common/cached_data/SessionInfo'\r\nimport ListingsTableElem from './ListingsTableElem';\r\n\r\n\r\nclass ListingsTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        collectionList: [],\r\n        username: SessionInfo.getSessionUser(),\r\n        userID: SessionInfo.getSessionUserID(),\r\n        postresponse: 'Fetching Data...'\r\n  }}\r\n\r\n  componentDidCatch(error) {\r\n    alert(\"ListingsTable \" + error)\r\n  }\r\n\r\n  render(){\r\n      this.loadList();\r\n      const list = this.state.collectionList;\r\n      return (\r\n      <div>\r\n        {list.length ? \r\n        (<div>\r\n              {this.renderListingTitle()}\r\n              {this.renderListingItems()}\r\n        </div>)\r\n        :(<div></div>)}\r\n        <h2>{this.state.postresponse}</h2>\r\n      </div>\r\n      )\r\n  }\r\n\r\n  //Render Methods\r\n\r\n  renderListingTitle = () => {\r\n    return(\r\n    <div class='listing_title'>\r\n      <div style={{flex: 2}}/>\r\n      <div style={{flex: 2}}>Name</div>\r\n      <div style={{flex: 7}}>Description</div>\r\n      <div style={{flex: 1}}>Cards</div>\r\n      <div style={{flex: 1}}>Price</div>\r\n      <div style={{flex: 2}}>Options</div>\r\n      <div style={{flex: 2}}>Download Collection</div>\r\n    </div>\r\n  )}\r\n\r\n  renderListingItems = () => {\r\n    let currCSS = 'listing_elem_gray'\r\n    //alert(JSON.stringify(this.state))\r\n    return(\r\n      this.state.collectionList.map((item) => {\r\n        currCSS = (currCSS === 'listing_elem_gray')? 'listing_elem_white': 'listing_elem_gray'\r\n        if (!(item.name === '')){\r\n        return(\r\n          <ListingsTableElem \r\n            link_url={`/collections?page=selected&id=${item.id}&name=${encodeURIComponent(item.collection_name)}`}\r\n            edit_url={`/collections?page=edit&id=${item.id}&name=${encodeURIComponent(item.collection_name)}`}\r\n            item = {item}\r\n            id_key = {item.id}\r\n            currCSS = {currCSS}\r\n            updateTopmostState={this.props.updateState}/>\r\n          )\r\n        } else {\r\n          return(null);\r\n        }\r\n  }))}\r\n    \r\n\r\n  //Loader Methods\r\n  \r\n  loadList = () => {\r\n    fetch('/api/collections/get-list-of-collections-by-id', \r\n    { \r\n      method: 'POST', \r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify(this.state)\r\n    })\r\n    .then(res => res.json())\r\n    .then(list => {if (list.length === 0 && !(this.state.postresponse === 'You have no collections. =(')) {\r\n      this.setState({postresponse: 'You have no collections. =('})\r\n    } else { \r\n      if (!(JSON.stringify(this.state.collectionList) === JSON.stringify(list))) {\r\n        this.setState({ collectionList: list, postresponse: '' })}\r\n  }})}\r\n\r\n}\r\n\r\nexport default ListingsTable;\r\n","import React, { Component } from 'react';\r\nimport {HomeButton, SignoutButton} from '../../common/elements/CommonButtons';\r\nimport {CreateCollectionButton} from './elements/Buttons'\r\nimport ListingsTable from './elements/ListingsTable';\r\nimport SessionInfo from '../../common/cached_data/SessionInfo';\r\nimport './css/Listing.css'\r\n\r\nclass ListingsMainPage extends Component {\r\n  \r\n  // Retrieves the list of items from the Express app\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state=({\r\n      loading: ''\r\n    })\r\n    this.updateState.bind(this)\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    alert(\"ListingsMainPage \" + error)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class='listing_main_page'>\r\n        <div>\r\n          <h1>{SessionInfo.getSessionUser()}'s Collection:</h1>\r\n        </div>\r\n          <ListingsTable updateState={this.updateState}/>\r\n        <div>\r\n            <HomeButton/>\r\n            <SignoutButton history={this.props.history}/>\r\n            <CreateCollectionButton/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //Binded Methods\r\n\r\n  updateState = () => {\r\n    //alert(\"Updating top\")\r\n    this.setState({\r\n      loading: \"...\"\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default ListingsMainPage;","import React, {Component} from 'react'\r\nimport '../css/PopupWindow.css'\r\n\r\n\r\n\r\nclass PopupWindow extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div class='popup_outer'>\r\n                <div class='popup_body'>\r\n                    <div class='popup_main_panel'>\r\n                        <div class='popup_result_panel'>\r\n                            {this.props.content}\r\n                        </div>\r\n                    <button onClick={this.props.closePopup}>Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PopupWindow","import React, {Component} from 'react'\r\nimport '../css/Listing.css'\r\n\r\nclass SearchPopupBody extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            formControls: { cardName: { value: '' }},\r\n            postResponse: [],\r\n            submittable: false,\r\n            cardID: ''\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        alert(\"SearchPopupBody \" + error+ info)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.renderSearchBox()}\r\n                {this.renderResults()}      \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    //Render methods\r\n\r\n    renderSearchBox = () => {\r\n        return(\r\n            <div>\r\n            <div style={{backgroundColor: 'gray'}}>\r\n                        <div style={{display:'inline'}}>\r\n                            {\"Search Card:  \"}\r\n                            <input  type=\"text\" \r\n                                    name=\"cardName\" \r\n                                    value={this.state.formControls.cardName.value} \r\n                                    onChange={this.changeHandler} \r\n                                    style= {{width: '70%', right: 0}}\r\n                            />\r\n                            <input  type=\"text\" \r\n                                    name=\"cardID\" \r\n                                    value={this.state.cardID} \r\n                                    disabled=\"true\"\r\n                                    style= {{width: '6%', right: 0}}\r\n                            />\r\n                        </div>\r\n                        <div style={{display:'inline'}}>\r\n                            <button onClick={this.handleSubmit} disabled={!this.state.submittable}>Submit</button>\r\n                        </div>\r\n            </div>\r\n            <div style={{backgroundColor: 'gray', height: '2px'}}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderResults = () => {\r\n        return(\r\n            <div class='popup_search_dropdown'>\r\n                {this.state.postResponse.map((item) => {\r\n                    return(\r\n                    <SearchPopupElement \r\n                        setChosenCard={this.setChosenCard.bind(this)}\r\n                        item = {item}\r\n                    />)\r\n                })}\r\n            </div> \r\n        )\r\n    }\r\n\r\n    //Handler methods\r\n\r\n    changeHandler = event => {\r\n        event.preventDefault()\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let id = this.state.cardID;\r\n        if (!(this.state.cardID === '')) {\r\n            id = '' \r\n        }\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                ...this.state.formControls[name],\r\n                value\r\n                }\r\n            }, \r\n            cardID: id, \r\n            submittable: false\r\n        }, () => {\r\n            fetch('/api/cards/query-card', \r\n            { \r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json'},\r\n                body: JSON.stringify(this.state)\r\n            })\r\n            .then((res) => {return res.text();})\r\n            .then((postResponse) => {\r\n                postResponse = JSON.parse(postResponse)\r\n                if (!(postResponse === this.state.postResponse)){\r\n                    this.setState({postResponse});\r\n            }})\r\n            .catch((err) => {\r\n                alert(err);\r\n        })});  \r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.props.setPreviewThenTogglePopup(this.state.cardID, this.state.formControls.cardName.value)\r\n    }\r\n\r\n    //Binded methods\r\n\r\n    setChosenCard = (name, id) => {\r\n        this.setState({\r\n            formControls: {\r\n              cardName: {value: name}\r\n             },\r\n            cardID: id,\r\n            submittable: true\r\n        }, () => {\r\n            fetch('/api/cards/query-card', \r\n            { \r\n                method: 'POST', \r\n                headers: { 'Content-Type': 'application/json'},\r\n                body: JSON.stringify(this.state)\r\n            })\r\n            .then((res) => {return res.text();})\r\n            .then((postResponse) => {\r\n                postResponse = JSON.parse(postResponse)\r\n                if (!(postResponse === this.state.postResponse)){\r\n                    this.setState({postResponse});\r\n            }})\r\n            .catch((err) => {\r\n                alert(err);\r\n        })});  \r\n    }\r\n\r\n}\r\n\r\n//Subclass\r\n\r\nclass SearchPopupElement extends Component {\r\n    \r\n    handleSelect = e => {\r\n        this.props.setChosenCard(this.props.item.name, this.props.item.card_id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class='popup_result_hoverable' onClick={this.handleSelect}>\r\n                {`ID: ${this.props.item.card_id} -- ${this.props.item.name} [${this.props.item.set.toUpperCase()}]` }\r\n            </div>\r\n        ) \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default SearchPopupBody;","import React, {Component} from 'react'\r\nimport '../css/Listing.css'\r\n\r\nclass FileUploadPopupBody extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            filename: '',\r\n            file: null,\r\n            fileContent: null,\r\n            submittable: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        alert(\"FileUploadPopupBody \" + error+ info)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.renderSearchBox()}\r\n                {this.renderResults()}      \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    //Render methods\r\n\r\n    renderSearchBox = () => {\r\n        return(\r\n            <div>\r\n            <div style={{backgroundColor: 'gray'}}>\r\n                        <div style={{display:'inline'}}>\r\n                            {\"Upload List:  \"}\r\n                            <input  type=\"file\" \r\n                                    name=\"filelist\" \r\n                                    value={this.state.filename} \r\n                                    accept=\".txt,.csv,.json\"\r\n                                    onChange={this.handleChange} \r\n                                    style= {{width: '70%', right: 0}}\r\n                            />\r\n                        </div>\r\n                        <div style={{display:'inline'}}>\r\n                            <button onClick={this.handleSubmit} disabled={!this.state.submittable}>Submit</button>\r\n                        </div>\r\n            </div>\r\n            <div style={{backgroundColor: 'gray', height: '2px'}}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderResults = () => {\r\n        return(\r\n            <div class='popup_search_dropdown'>\r\n                {this.state.fileContent}\r\n            </div> \r\n        )\r\n    }\r\n\r\n    //Loader Methods\r\n\r\n    loadFileContent = () => {\r\n        let reader = new FileReader()\r\n        reader.onload = (e) => {\r\n            this.setState({ \r\n                fileContent: reader.result\r\n            }); \r\n        }\r\n        if (this.state.file) {\r\n            reader.readAsText(this.state.file);\r\n        }\r\n    }\r\n\r\n    //Handler methods\r\n\r\n    handleChange = event => {\r\n        event.preventDefault()\r\n        const value = event.target.files[0];\r\n        const filename = event.target.value;\r\n        \r\n        this.setState({\r\n            filename: filename,\r\n            file: value,\r\n            submittable: true\r\n        }, this.loadFileContent);  \r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        this.props.setFileUploadThenTogglePopup(this.state.file)\r\n    }\r\n\r\n    //Binded methods\r\n\r\n}\r\n\r\n\r\nexport default FileUploadPopupBody;","import React, { Component } from 'react';\r\nimport { HomeButton, CollectionListButton } from '../../common/elements/CommonButtons'\r\nimport SessionInfo from '../../common/cached_data/SessionInfo'\r\nimport CardImagePanel from '../../common/images/CardImagePanel'\r\nimport PopupWindow from '../../common/elements/PopupWindow'\r\nimport SearchPopupBody from './elements/SearchPopupBody'\r\nimport FileUploadPopupBody from './elements/FileUploadPopupBody'\r\nimport './css/Listing.css'\r\n\r\nclass CreateCollectionPage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formControls: { name: { value: '' }, desc: { value: '' }, preview: { value: 0 } },\r\n      postResponse: '',\r\n      userID: SessionInfo.getSessionUserID(),\r\n      showPopup: false,\r\n      file: null\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    alert(\"CreateCollectionPage \" + error + info)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderForm()}\r\n        {this.renderPopup()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Render Methods\r\n\r\n  renderForm() {\r\n    return (\r\n      <form method=\"post\" onSubmit={this.handleSubmit}>\r\n        <title>Create Collection</title>\r\n        <h1>Create a New Collection</h1>\r\n        <div>Name:</div>\r\n        <input type=\"text\"\r\n          name=\"name\"\r\n          cols= \"35\"\r\n          value={this.state.formControls.name.value}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div>Description (Optional):</div>\r\n        <textarea type=\"text\"\r\n          name=\"desc\"\r\n          value={this.state.formControls.desc.value}\r\n          onChange={this.handleChange}\r\n          cols=\"35\"\r\n          wrap=\"soft\"\r\n        />\r\n        <div>\r\n          Upload Custom List (Optional):\r\n        </div>\r\n        <div>\r\n          <i>{this.state.file? this.state.file.name: null}</i>\r\n        </div>\r\n        <div>\r\n          {!this.state.file? \r\n            <button onClick={this.handleFileUpload}>Upload File</button>: \r\n            <button onClick={this.handleFileUpload}>Change File</button>}\r\n          {this.state.file? <button onClick={this.handleClearFile}>Clear File</button>: null}\r\n        </div>\r\n        <div> Add Preview Card (Optional): </div>\r\n        <div>\r\n        <button onClick={this.handleCardSearch}>Search Card</button>\r\n        </div>\r\n        <div>\r\n          {`ID: ${this.state.formControls.preview.value}`}\r\n         \r\n        </div>\r\n        <div class='preview_panel'>\r\n          <CardImagePanel id={this.state.formControls.preview.value} paramsType=\"id\" imgType={{ type: 'art_crop' }} />\r\n        </div>\r\n        \r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n          <HomeButton />\r\n          <CollectionListButton />\r\n        </div>\r\n        {this.state.postResponse}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderPopup = () => {\r\n    var Popup;\r\n    switch (this.state.showPopup) {\r\n      case 1:\r\n        Popup = <PopupWindow\r\n          closePopup={this.togglePopup.bind(this)}\r\n          content={<SearchPopupBody\r\n            setPreviewThenTogglePopup={this.setPreviewThenTogglePopup.bind(this)}\r\n            defaultPreview={this.state.formControls.preview} />}\r\n        />\r\n        break;\r\n      case 2:\r\n        Popup = <PopupWindow\r\n          closePopup={this.togglePopup.bind(this)}\r\n          content={<FileUploadPopupBody\r\n                      setFileUploadThenTogglePopup={this.setFileUploadThenTogglePopup.bind(this)}/>}\r\n        />\r\n        break;\r\n      default:\r\n        Popup = null\r\n    }\r\n    return (Popup)\r\n  }\r\n\r\n  //Handler Methods\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    fetch('/api/collections/create-collection',\r\n      {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(this.state)\r\n      }\r\n    )\r\n      .then((res) => { return res.json(); })\r\n      .then((res) => {\r\n        if (res === -2) {\r\n          this.setState({ postResponse: 'Collection not created.' })\r\n        } else if (res === -1) {\r\n          this.setState({ postResponse: 'Name cannot be empty.' })\r\n        } else if (res === -3) {\r\n          this.setState({ postResponse: 'Something wrong happened. Please relog in and try again.' })\r\n        } else {\r\n          this.props.history.push({\r\n            pathname: '/collections',\r\n            search: '?page=default',\r\n            state: { page: \"default\" }\r\n          })\r\n        }\r\n      })\r\n  }\r\n\r\n  handleChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      formControls: {\r\n        ...this.state.formControls,\r\n        [name]: {\r\n          ...this.state.formControls[name],\r\n          value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCardSearch = e => {\r\n    e.preventDefault()\r\n    this.togglePopup(1)\r\n  }\r\n\r\n  handleFileUpload = e => {\r\n    e.preventDefault()\r\n    this.togglePopup(2)\r\n  }\r\n\r\n  handleClearFile = e => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      file: null\r\n    });\r\n  }\r\n\r\n  //Binded Methods\r\n\r\n  togglePopup = (flag = false) => {\r\n    this.setState({\r\n      showPopup: flag\r\n    })\r\n  }\r\n\r\n  setPreviewThenTogglePopup = (id, previewCardName) => {\r\n    let newformControls = { ...this.state.formControls }\r\n    newformControls.preview.value = id\r\n    this.setState({\r\n      showPopup: false,\r\n      formControls: newformControls,\r\n      previewCardName: previewCardName\r\n    })\r\n  }\r\n\r\n  setFileUploadThenTogglePopup= (file) => {\r\n    this.setState({\r\n      file: file,\r\n      showPopup: false\r\n    })\r\n  }\r\n\r\n};\r\n\r\nexport default CreateCollectionPage;","/*This function is a custom-made function that parses URL params*/\r\n\r\nconst readCurrURLParamsAsJSON = () => {\r\n    var params = '';\r\n    var string = (window.location.href).split('?')[1]\r\n    if (string) {\r\n        string.split('&').forEach((item) =>\r\n        {\r\n            var items = item.split('=');\r\n            params = params.concat(',\"' + decodeURIComponent(items[0]) + '\":\"' + decodeURIComponent(items[1]) + '\"');\r\n        });\r\n        params = params.toString().substring(1);\r\n        params = '{'+ params + '}';\r\n        return JSON.parse(params);\r\n    } else {\r\n        return {}\r\n    }\r\n}\r\n\r\nexport default readCurrURLParamsAsJSON;","import React, { Component } from 'react';\r\nimport { HomeButton, CollectionListButton } from '../../common/elements/CommonButtons'\r\nimport SessionInfo from '../../common/cached_data/SessionInfo'\r\nimport readCurrURLParamsAsJSON from '../../common/functions/ReadCurrURLParamsAsJSON'\r\nimport PopupWindow from '../../common/elements/PopupWindow'\r\nimport CardImagePanel from './../../common/images/CardImagePanel'\r\nimport SearchPopupBody from './elements/SearchPopupBody'\r\nimport { PopupButton } from './elements/Buttons'\r\nimport './css/Listing.css'\r\nimport callAPI from '../../common/functions/CallAPI';\r\n\r\nclass EditCollectionPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userID: SessionInfo.getSessionUserID(),\r\n            collectionID: readCurrURLParamsAsJSON().id,\r\n            formControls: {\r\n                name: { value: '' },\r\n                desc: { value: '' },\r\n                preview: { value: '' }\r\n            },\r\n            previewCardName: 'NONE',\r\n            postResponse: '',\r\n            showPopup: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error) {\r\n        alert(\"EditCollectionPage \" + error)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDefaultValue()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderForm()}\r\n                {this.renderPopupWindow()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Render Methods\r\n\r\n    renderForm = () => {\r\n        return (\r\n            <div>\r\n                <form method=\"post\" onSubmit={this.handleSubmit}>\r\n                    <title>Edit Collection</title>\r\n                    <div>Edit Collection</div>\r\n                    <div> Name: </div>\r\n                    <input type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.formControls.name.value}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div> Description: </div>\r\n                    <textarea type=\"text\"\r\n                        name=\"desc\"\r\n                        value={this.state.formControls.desc.value}\r\n                        onChange={this.handleChange}\r\n                        cols=\"35\"\r\n                        wrap=\"soft\"\r\n                    />\r\n                    <div> Add Preview Card: </div>\r\n                    <div>{`ID: ${this.state.formControls.preview.value}`}</div>\r\n                    <div class='preview_panel'>\r\n                        <CardImagePanel id={this.state.formControls.preview.value} paramsType=\"id\" imgType={{ type: 'art_crop' }} />\r\n                    </div>\r\n                    <PopupButton\r\n                        popup={this.handleCardSearch.bind(this)}\r\n                        text=\"Search Card\" />\r\n                    <div>\r\n                        <button type=\"submit\">Submit</button>\r\n                        <HomeButton />\r\n                        <CollectionListButton />\r\n                    </div>\r\n                    {this.state.postResponse}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderPopupWindow = () => {\r\n        var Popup;\r\n        switch (this.state.showPopup) {\r\n            case 1:\r\n                Popup = <PopupWindow\r\n                    closePopup={this.togglePopup.bind(this)}\r\n                    content={<SearchPopupBody\r\n                        defaultPreview={this.state.formControls.preview}\r\n                        setPreviewThenTogglePopup={this.setPreviewThenTogglePopup.bind(this)}\r\n                    />}\r\n                />\r\n                break;\r\n            default:\r\n                Popup = null\r\n        }\r\n        return (Popup)\r\n    }\r\n\r\n    //Loader Methods\r\n\r\n    loadDefaultValue = () => {\r\n        callAPI('/api/collections/get-list',\r\n            (json, err) => {\r\n                if (!err) {\r\n                    let obj = json.filter((item) => item.id.toString() === this.state.collectionID)[0]\r\n                    let newFormControls = { ...this.state.formControls }\r\n                    newFormControls.name.value = obj.collection_name;\r\n                    newFormControls.desc.value = obj.description;\r\n                    newFormControls.preview.value = obj.showcase_card_id;\r\n                    this.setState({\r\n                        formControls: newFormControls\r\n                    })\r\n                } else {\r\n                    alert(err)\r\n                }\r\n            },\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(this.state)\r\n            }\r\n        )\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (this.state.formControls.name.value.replace(/^\\s+$/, '').length === 0) {\r\n            this.setState({ postResponse: \"Name cannot be empty!\" });\r\n            return null\r\n        }\r\n        callAPI('/api/collections/edit-collection',\r\n            (resp, err) => {\r\n                if (!err) {\r\n                    this.props.history.push({\r\n                        pathname: '/collections',\r\n                        search: '?page=default',\r\n                        state: { page: \"default\" }\r\n                    });\r\n                } else {\r\n                    this.setState({ postResponse: 'Collection not editted. Please try again, or go back to your collections, or login again.' })\r\n                }\r\n            }\r\n            ,\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(this.state)\r\n            }\r\n        )\r\n    }\r\n\r\n    handleChange = event => {\r\n        event.preventDefault()\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleCardSearch = e => {\r\n        e.preventDefault()\r\n        this.togglePopup(1)\r\n    }\r\n\r\n    // Binded Methods\r\n\r\n    togglePopup = (flag = false) => {\r\n        this.setState({\r\n            showPopup: flag\r\n        });\r\n    }\r\n\r\n    setPreviewThenTogglePopup = (id, previewCardName) => {\r\n        let newformControls = { ...this.state.formControls }\r\n        newformControls.preview.value = id\r\n        this.setState({\r\n            showPopup: !this.state.showPopup,\r\n            formControls: newformControls,\r\n            previewCardName: previewCardName\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default EditCollectionPage;","import React, {Component} from 'react';\r\n\r\n/*\r\nThis class handles general download fetch requests\r\n*/\r\nclass DownloadPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: 'Downloading Data...'\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //read params and reconstructs it as API uri\r\n        let params = this.readURLAsJSONAPIString();\r\n        let fetchpath = '/api/'.concat(JSON.parse(params).func);\r\n\r\n        //fetch download (needs more work)\r\n        fetch(fetchpath).then((res) => {\r\n            return res.json();\r\n        }).then((res) =>\r\n            {\r\n                alert(res);\r\n            }\r\n        );\r\n\r\n        //automatically pushes back into homepage (will be goback() if that is implementable)\r\n        this.props.history.goBack();      \r\n    }\r\n\r\n    readURLAsJSONAPIString() {\r\n\t\tvar params = '';\r\n\t\tparams = (window.location.href).split('?').slice(1).map((item) =>\r\n\t\t{\r\n\t\t\tvar items;\r\n            items = item.replace('%2F', '/').split('=');\r\n\t\t\tparams = params.concat(',\"' + items[0] + '\":\"' + items[1] + '\"');\r\n\t\t\treturn params;\r\n\t\t}\r\n\t);\r\n\t\tparams = params.toString().substring(1);\r\n\t\tparams = '{'+ params + '}';\r\n\t\treturn params\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div>{this.state.redirect}</div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default DownloadPage;","import React, { Component } from 'react';\r\n\r\nclass SwitchToListViewButton extends Component {\r\n    render() {\r\n        return (<button onClick={this.props.onClick}>Switch to List View</button>)\r\n    }\r\n}\r\n\r\nclass SwitchToFullViewButton extends Component {\r\n    render() {\r\n        return (<button onClick={this.props.onClick}>Switch to Detailed View</button>)\r\n    }\r\n}\r\n\r\nexport {\r\n    SwitchToListViewButton,\r\n    SwitchToFullViewButton\r\n}","class ManaCostWebkit {\r\n\r\n    static listOfManaIcons;\r\n\r\n    static retrieveWebkit = () => {\r\n    if (!(this.listOfManaIcons)) {\r\n        this.listOfManaIcons = require.context( '../images/mana_symbols', true, /\\.svg$/ )\r\n    }\r\n        return this.listOfManaIcons\r\n    }\r\n\r\n}\r\n\r\nexport default ManaCostWebkit","\r\n/*This function replaces a mana cost symbol with its SVG equivalent*/\r\nconst replaceManaCostWithSVGSymbol = async (stringRepresentation) => {\r\n    if (stringRepresentation === undefined || stringRepresentation === '') {\r\n        return ([])\r\n    }\r\n    let listOfCosts = stringRepresentation.replace(/\\s+/g, '').split('{').slice(1);\r\n    listOfCosts = listOfCosts.map((sym) => {\r\n                let remadeSym = '{'.concat(sym)\r\n                return remadeSym\r\n        })\r\n    let list = await fetch('/api/cards/fetch-list-of-mana-symbols',\r\n    {\r\n        method: 'POST', \r\n        headers: { 'Content-Type': 'application/json'},\r\n        body: JSON.stringify(listOfCosts)\r\n    })\r\n    let resolved_list = await list.json();\r\n    return resolved_list.data\r\n}\r\n\r\n\r\nexport default replaceManaCostWithSVGSymbol;","import React, {Component} from 'react'\r\nimport ManaCostWebkit from '../cached_data/ManaCostWebkit'\r\nimport replaceManaCostWithSVGSymbol from '../functions/ReplaceManaCostWithSVGSymbol'\r\n\r\nclass ManaCostPanel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            listofSVGs:[]\r\n        }\r\n        this.listofManaSymbols = ManaCostWebkit.retrieveWebkit()\r\n    }\r\n\r\n    updateManaCost = () => {\r\n        let cardObj = this.props.cardObj\r\n        let mana_cost;\r\n        if (cardObj.layout === \"transform\") {\r\n            mana_cost = cardObj.card_faces.map((obj)=>{\r\n                return(obj.mana_cost)\r\n            }).join('')\r\n        } else if (cardObj.layout === \"adventure\") {\r\n            mana_cost = cardObj.card_faces.map((obj) => {\r\n                return(obj.mana_cost)\r\n            }).join('//')\r\n        } else {\r\n            mana_cost = cardObj.mana_cost\r\n        }\r\n        mana_cost = mana_cost.split('//').join('{//}')\r\n        if (!(mana_cost === '')) {\r\n            replaceManaCostWithSVGSymbol(mana_cost).then((listURL) =>\r\n            {\r\n                let list=[]\r\n                let listFileName = listURL.map((url) => {\r\n                    if (url === '{//}') {\r\n                        return '//'\r\n                    } else {\r\n                        return url.split(/(\\\\|\\/)/g).slice(-1)[0].trim()\r\n                    }\r\n                })\r\n                let listSVGFiles = this.listofManaSymbols.keys().map((url) => {\r\n                    return url.split(/(\\\\|\\/)/g).slice(-1)[0].trim()\r\n                })\r\n                listFileName.forEach((p) =>{\r\n                    if (p === '//') {\r\n                        list.push('//')\r\n                    } else if (listSVGFiles.includes(p))\r\n                    {\r\n                        let i = this.listofManaSymbols(this.listofManaSymbols.keys().filter((key)=> key.includes(p)))\r\n                        list.push(i)\r\n                    }\r\n                })\r\n                if (!(JSON.stringify(list) === JSON.stringify(this.state.listofSVGs))) {\r\n                    this.setState({\r\n                        listofSVGs: list\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                alert(err.message)\r\n            })\r\n        }\r\n    }\r\n\r\n    renderManaSymbol = (item) => {\r\n        return (\r\n            <div>\r\n                <object data={item} type=\"image/svg+xml\" style={this.props.size}>\r\n                    <img src={item} alt=\"imgSym\" style={this.props.size}></img>\r\n                </object>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    render() {\r\n        this.updateManaCost()\r\n        if (this.state.listofSVGs === []) {\r\n            return (null)\r\n        } else {\r\n            return(\r\n                this.state.listofSVGs.map((item) => {\r\n                    if (item === '//') {\r\n                        return <div>{`//`}</div>\r\n                }else {\r\n                    return this.renderManaSymbol(item)\r\n                }}\r\n                )\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ManaCostPanel","\r\nimport React, { Component } from 'react';\r\nimport SessionInfo from '../../../common/cached_data/SessionInfo';\r\nimport CardImagePanel from '../../../common/images/CardImagePanel'\r\nimport ManaCostPanel from '../../../common/images/ManaCostPanel';\r\n\r\nconst AddRemoveButtonCSS = {\r\n    display: 'block',\r\n    padding:'auto auto',\r\n    margin:'auto auto',\r\n    height: '100%',\r\n    width: '100%',\r\n    font: '15px black',\r\n    'font-weight': 'bold',\r\n}\r\n\r\n/*This component renders a Collection Table element*/\r\nclass CollectionTableElement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: [],\r\n            id_key: this.props.id_key,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error) {\r\n        alert(\"CollectionTableElement \" + error)\r\n    }\r\n\r\n    render(){  \r\n        this.loadRowObjs() \r\n        return(this.renderRowElement())\r\n    }\r\n\r\n    //Render Methods\r\n\r\n    renderRowElement = () => {\r\n        if (!(JSON.stringify(this.state.item) === '[]')) {\r\n            let cardObj = this.state.item[0]\r\n            return(\r\n            <div>\r\n            <div class={this.props.resBoxCSS}>\r\n                <div class='collection_elem_image_panel'>\r\n                <CardImagePanel \r\n                    cardObj = {cardObj}\r\n                    imgType = {{type: \"normal\"}}\r\n                />\r\n                </div>\r\n                <div style={{flex: 1}}>{this.state.id_key}</div>\r\n                <div style={{flex: 2}} >{cardObj.name}</div>\r\n                <div style={{flex: 2}}>\r\n                    <div class='collection_table_mana_cost'>\r\n                        <ManaCostPanel cardObj = {cardObj} size={{width:'20px', height:'auto'}}/>\r\n                    </div>\r\n                </div>\r\n                <div style={{flex: 1}}>{cardObj.rarity.substring(0,1).toUpperCase()}</div>\r\n                <div style={{flex: 3}}>{cardObj.type_line}</div>\r\n                <div style={{flex: 3}}>{`${cardObj.set_name} [${cardObj.set.toUpperCase()}]`}</div>\r\n                <div style={{flex: 1}}>{cardObj.set_id.toUpperCase()}</div>\r\n                <div style={{flex: 1}}>{this.props.cardInfo.is_foil ? <b>Yes</b> : \"No\"}</div>\r\n                <div style={{flex: 1}}>{this.props.cardInfo.is_foil ? \r\n                    (cardObj.prices.usd_foil === null ? 'N/A':`$${cardObj.prices.usd_foil}`)\r\n                    :(cardObj.prices.usd === null ? 'N/A':`$${cardObj.prices.usd}`)}\r\n                </div>\r\n                <div style={{flex: 1}}>{this.props.cardInfo.amt}</div>\r\n                <div style={{flex: 1, 'text-align': 'center'}}>\r\n                    <button style={AddRemoveButtonCSS} onClick={this.handleAddCard}>\r\n                                <div>Add Card</div>\r\n                        </button>\r\n                </div>\r\n                <div style={{flex: 1, 'text-align': 'center'}}>\r\n                            <button style={AddRemoveButtonCSS} onClick={this.handleRemoveCard}>\r\n                                <div>Remove Card</div>\r\n                            </button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }        \r\n    }\r\n    \r\n    //Loader Methods\r\n\r\n    loadRowObjs = () => {\r\n      fetch('/api/collections/fetch-card-object', \r\n      { \r\n        method: 'POST', \r\n        headers: { 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({card_id: this.props.cardInfo.card_id})\r\n      })\r\n      .then(res => res.json())\r\n      .then(list => {\r\n        if (!(list.length === 0) && !(JSON.stringify(this.state.item) === JSON.stringify(list))) {\r\n                    this.setState({\r\n                        item: list,\r\n                        id_key: this.props.id_key})}\r\n      }).catch((err) => {\r\n        alert(err.message)\r\n        })\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handleAddCard = e => {\r\n        e.preventDefault()\r\n        let item = this.state.item[0]\r\n        fetch('/api/collections/add-card-to-collection', \r\n            { \r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({chosenIsFoil: this.props.cardInfo.is_foil, set: item.set, set_id: item.set_id, collectionID: SessionInfo.getCollectionID()})\r\n            }\r\n        ).then(() => {\r\n            this.props.updateTopmostState()\r\n        }).catch((err) => {\r\n            alert(err.message)\r\n        })\r\n    }\r\n    \r\n    handleRemoveCard = e => {\r\n        e.preventDefault()\r\n        let item = this.state.item[0]\r\n        fetch('/api/collections/remove-card-from-collection', \r\n            { \r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                chosenIsFoil: this.props.cardInfo.is_foil, \r\n                set: item.set, \r\n                set_id: item.set_id, \r\n                collectionID: SessionInfo.getCollectionID()})\r\n            }\r\n        ).then((res) => {\r\n            this.props.updateTopmostState()\r\n        }).catch((err) => {\r\n            alert(err.message)\r\n        })\r\n    }\r\n}\r\n\r\nexport default CollectionTableElement","import React, {Component} from 'react'\r\n\r\nclass CollectionPageNavPanel extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lastDisabled:true,\r\n            nextDisabled:true,\r\n            maxPages: Math.ceil(Math.max(1, this.props.totalElems/this.props.elemPerPage)),\r\n            navPage: this.props.currPage\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        this.loadDisabled()\r\n        return(this.renderNavPanel())\r\n    }\r\n\r\n    //Render Methods\r\n\r\n    renderNavPanel = () => {\r\n        return(\r\n            <div class='nav_panel_wrapper'>\r\n            {this.props.totalElems === 0 ? null:\r\n                <div style={{width: '98.3%'}} class='nav_panel_elements'>\r\n                    <div class='nav_inline nav_horizontal_padding'>Page:</div>\r\n                    <div class='nav_inline nav_horizontal_padding'>{this.renderPageNavigator()}</div>\r\n                    <div class='nav_inline'>{`/  ${this.state.maxPages}`}</div>\r\n                </div>\r\n            }\r\n            </div>)\r\n    }\r\n\r\n    renderPageNavigator = () => {\r\n        return(\r\n            <select\r\n                value={this.props.currPage}\r\n                onChange={this.handleAnyPage}\r\n                class = 'page_nav_text_input'\r\n            >\r\n            {(new Array(this.state.maxPages)).fill(0).map((_v,index) =>{\r\n                return (<option value={index+1}>{index+1}</option>)\r\n            })\r\n            }\r\n            </select>\r\n        )\r\n\r\n    }\r\n    //Loader Methods\r\n\r\n    loadDisabled = () => {\r\n        var last = (this.props.currPage === 1)? true: false\r\n        var next = (this.props.currPage < Math.ceil(this.props.totalElems/this.props.elemPerPage))? false: true\r\n        if (!(next === this.state.nextDisabled && last === this.state.lastDisabled)) {\r\n            this.setState({\r\n                nextDisabled: next,\r\n                lastDisabled: last\r\n            })\r\n        }\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handlePrevPage = e => {\r\n        e.preventDefault()\r\n        if (this.props.currPage-1 >= 1 && this.props.currPage-1 <= this.state.maxPages) {\r\n            this.props.handleChangeAnyPage(this.props.currPage-1)\r\n        }\r\n    }\r\n\r\n    handleAnyPage = e => {\r\n        e.preventDefault()\r\n        const page = parseInt(e.target.value)? parseInt(e.target.value): ''\r\n        this.props.handleChangeAnyPage(page)\r\n    }\r\n\r\n    handleNextPage = e => {\r\n        e.preventDefault()\r\n        if (this.props.currPage+1 >= 1 && this.props.currPage+1 <= this.state.maxPages) {\r\n            this.props.handleChangeAnyPage(this.props.currPage+1)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default CollectionPageNavPanel","import React, { Component } from 'react';\r\nimport SessionInfo from '../../../common/cached_data/SessionInfo';\r\nimport CollectionTableElement from './CollectionTableElement';\r\nimport CollectionPageNavPanel from './CollectionPageNavPanel'\r\n\r\n/*\r\nCollectionTable renders a table that contains all the cards in a user's collection\r\n*/\r\nclass CollectionTable extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        username: SessionInfo.getSessionUser(),\r\n        userID: SessionInfo.getSessionUserID(),\r\n        collectionID: SessionInfo.getCollectionID(),\r\n        collectionName: SessionInfo.getCollectionName(),\r\n        page: 1,\r\n        elemPerPage: 10,\r\n        disableAll: false\r\n        }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    alert(\"CollectionTable \" + error + \" \" + JSON.stringify(info))\r\n  }\r\n \r\n  render() {\r\n    return(\r\n      <div>\r\n        {this.renderNavPanel()}\r\n        {this.renderTableTitle()}\r\n        {this.renderTableBody()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Render Methods\r\n\r\n  renderNavPanel = () => {\r\n    return(<div>\r\n      <CollectionPageNavPanel \r\n        handleChangeAnyPage = {this.handleChangeAnyPage.bind(this)}\r\n        currPage={this.state.page}\r\n        elemPerPage={this.state.elemPerPage}\r\n        totalElems={this.props.collectionList.length}\r\n        disableAll= {this.state.disableAll}\r\n\r\n      />\r\n      </div>\r\n      )\r\n  } \r\n\r\n  renderTableTitle = () => {\r\n    return(\r\n    <div class='collection_table_title'>\r\n      <div style={{flex: 3}}></div>\r\n      <div style={{flex: 1}}>NO.</div>\r\n      <div style={{flex: 2}}>CARD NAME</div>\r\n      <div style={{flex: 2}}>MANA</div>\r\n      <div style={{flex: 1}}>RARITY</div>\r\n      <div style={{flex: 3}}>TYPE</div>\r\n      <div style={{flex: 3}}>SET</div>\r\n      <div style={{flex: 1}}>ID</div>\r\n      <div style={{flex: 1}}>FOIL</div>\r\n      <div style={{flex: 1}}>PRICE</div>\r\n      <div style={{flex: 1}}>AMT</div>\r\n      <div style={{flex: 1}}></div>\r\n      <div style={{flex: 1}}></div>\r\n    </div>\r\n  )}\r\n\r\n  renderTableBody = () => {\r\n    if (!(this.props.collectionList.length === 0)) {\r\n      /*deep copying the prop and sorting it (use fast data-loss copy since everything is JSON)*/\r\n      var list = this.loadSortedList()\r\n\r\n      return (\r\n        <div>\r\n          {this.renderTableElems(list)}\r\n          {this.renderNavPanel()}\r\n        </div>\r\n        )\r\n    } else {\r\n      return(<div>You have no cards in collection.</div>)\r\n    }\r\n  }\r\n\r\n  renderTableElems = (list) => {\r\n    var currCSS = 'collection_result_gray'\r\n    return(\r\n        list.map((info, index) => {\r\n          currCSS = (currCSS === 'collection_result_gray')? 'collection_result_white': 'collection_result_gray'\r\n          if ((index < this.state.page*this.state.elemPerPage) && (index >= (this.state.page-1)*this.state.elemPerPage)) {\r\n            return (\r\n            <CollectionTableElement \r\n              id_key={index+1}\r\n              cardInfo={info}\r\n              resBoxCSS={currCSS} \r\n              updateTopmostState={this.props.updateState}/>\r\n            )\r\n          } else {\r\n            return (null)\r\n          }\r\n        })\r\n  )}\r\n\r\n  //Loader Methods\r\n\r\n  loadSortedList = () => {\r\n    var list = JSON.stringify(this.props.collectionList).valueOf()\r\n    list = JSON.parse(list)\r\n    list.sort((a,b) => {return (a.card_name.localeCompare(b.card_name) || a.set_code.localeCompare(b.set_code) || a.is_foil-b.is_foil)})\r\n    return list\r\n  }\r\n\r\n  //Binded Methods\r\n\r\n  handleChangeAnyPage = (pageNumber) => {\r\n    this.setState({\r\n      page: pageNumber\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default CollectionTable;","import React, { Component } from 'react';\r\nimport SessionInfo from '../../../common/cached_data/SessionInfo';\r\nimport CollectionPageNavPanel from './CollectionPageNavPanel'\r\n\r\nclass CollectionTableListForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: SessionInfo.getSessionUser(),\r\n      userID: SessionInfo.getSessionUserID(),\r\n      collectionID: SessionInfo.getCollectionID(),\r\n      collectionName: SessionInfo.getCollectionName(),\r\n      page: 1,\r\n      elemPerPage: 50,\r\n      currIndex: 'Name',\r\n      disableAll: false,\r\n      list: []\r\n    }\r\n    this.sortIndices = ['Name', 'Type', 'CMC', 'Colors', 'Set', 'Price', 'Amount']\r\n    this.sortIndexKeys = ['name', 'type_line', 'cmc', 'colors', 'set', 'prices', 'amt']\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    alert(\"CollectionTableListForm \" + error + JSON.stringify(info))\r\n  }\r\n\r\n  render() {\r\n    this.loadList()\r\n    return (\r\n      <div>\r\n        {this.renderNavigationPanel()}\r\n        {this.renderDropdownPanel()}\r\n        {this.renderTable()}\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //Render Methods\r\n\r\n  renderNavigationPanel = () => {\r\n    return (\r\n      <CollectionPageNavPanel\r\n        handleChangeAnyPage={this.handleChangeAnyPage.bind(this)}\r\n        currPage={this.state.page}\r\n        elemPerPage={this.state.elemPerPage}\r\n        totalElems={this.props.collectionList.length}\r\n        disableAll={this.state.disableAll}\r\n\r\n      />)\r\n  }\r\n  renderTable = () => {\r\n    return (\r\n      <div>\r\n        {\r\n          (this.state.list.length === 0) ?\r\n            null:\r\n            <div>\r\n              {this.renderListPanel()}\r\n              {this.renderNavigationPanel()}\r\n            </div>\r\n        }\r\n      </div>)\r\n  }\r\n\r\n  renderListPanel = () => {\r\n    let list = this.loadDefaultSortedList()\r\n    switch (this.state.currIndex) {\r\n      case 'CMC':\r\n        return (this.renderListByCMC(list))\r\n      case 'Colors':\r\n        return (this.renderListByColors(list))\r\n      case 'Set':\r\n        return (this.renderListBySet(list))\r\n      case 'Price':\r\n        return (this.renderListByPrice(list))\r\n      default:\r\n        return (this.renderListDefaultSort(list))\r\n    }\r\n  }\r\n\r\n  renderListElement = (info, showprice = false) => {\r\n    info = JSON.parse(JSON.stringify(info.valueOf()))\r\n    let f = info.is_foil ? '*FOIL*' : ''\r\n    let price = info.is_foil ? info.prices['usd_foil'] : info.prices['usd']\r\n    let priceStr =\r\n      showprice ?\r\n        ((price === null) ?\r\n          ' N/A> '\r\n          : (info.amt > 1 ?\r\n            ` $${Number.parseFloat(price * info.amt).toFixed(2)} (${info.amt}x $${Number.parseFloat(price).toFixed(2)})> `\r\n            : ` $${Number.parseFloat(price).toFixed(2)}> `))\r\n        : ''\r\n    return (\r\n      <div >\r\n        <div style={{ fontWeight: 'bold', display: 'inline-block' }}>{`${priceStr}`}</div>\r\n        <div style={{ display: 'inline-block' }}>{`${info.amt}x ${info.name} [${info.set.toUpperCase()}] ${f}`}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderDropdownPanel = () => {\r\n    return (\r\n      <div id='list_sort_panel'>\r\n        <div id='sortby_position'>{`Sort By: `}</div>\r\n        <select id=\"sort\"\r\n          style={{ display: 'inline-block', width: '200px' }}\r\n          onChange={this.handleSortMethodChange}\r\n          value={this.state.currIndex}>\r\n          {this.sortIndices.map((item) => {\r\n            return (<option value={item}>{`${item}`}</option>)\r\n          })\r\n          }\r\n        </select>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderListByPrice = (list) => {\r\n    let newlist = JSON.stringify(list).valueOf()\r\n    newlist = JSON.parse(newlist)\r\n    newlist.sort((a, b) => {\r\n      let a_price = a.is_foil ? a.prices['usd_foil'] : a.prices['usd']\r\n      let b_price = b.is_foil ? b.prices['usd_foil'] : b.prices['usd']\r\n      return (b_price * b.amt - a_price * a.amt)\r\n    })\r\n    return (this.renderListDefaultSort(newlist, true))\r\n  }\r\n\r\n  renderListDefaultSort = (list, showprice = false) => {\r\n    let newlist = JSON.stringify(list).valueOf()\r\n    newlist = JSON.parse(newlist)\r\n    return (\r\n      newlist.map((info, index) => {\r\n        if ((index < this.state.page * this.state.elemPerPage) && (index >= (this.state.page - 1) * this.state.elemPerPage)) {\r\n          return (<div>{this.renderListElement(info, showprice)}</div>)\r\n        } else { return (null) }\r\n      }))\r\n  }\r\n\r\n  renderListByType = (list) => {\r\n\r\n  }\r\n\r\n  renderListBySet = (list) => {\r\n    let newlist = JSON.stringify(list).valueOf()\r\n    newlist = JSON.parse(newlist)\r\n    newlist.sort((a, b) => { return (a.set.localeCompare(b.set)) })\r\n    return (this.renderListDefaultSort(newlist))\r\n  }\r\n\r\n  renderListByCMC = (list) => {\r\n    list = JSON.stringify(list).valueOf()\r\n    list = JSON.parse(list)\r\n    list.sort((a, b) => { return (b.cmc - a.cmc) })\r\n    let prevCMC = -1\r\n    return (\r\n      list.map((info, index) => {\r\n        if ((index < this.state.page * this.state.elemPerPage) && (index >= (this.state.page - 1) * this.state.elemPerPage)) {\r\n          if (!(prevCMC === info.cmc)) {\r\n            prevCMC = info.cmc\r\n            return (\r\n              <div>\r\n                <div><h3>{`CMC: ${info.cmc}`}</h3></div>\r\n                <div>{this.renderListElement(info)}</div>\r\n              </div>\r\n            )\r\n          } else { return (<div>{this.renderListElement(info)}</div>) }\r\n        } else { return (null) }\r\n      }))\r\n  }\r\n\r\n  renderListByColors = (list) => {\r\n    list = JSON.stringify(list).valueOf()\r\n    list = JSON.parse(list)\r\n    let multiList = list.filter((item) => item.colors.length > 1)\r\n    let colorlessList = list.filter((item) => item.colors.length === 0)\r\n    let monoList = list.filter((item) => item.colors.length === 1)\r\n    monoList.sort((a, b) => { return a.colors[0].localeCompare(b.colors[0] || a.name.localeCompare(b.name) || a.set.localeCompare(b.set) || a.is_foil - b.is_foil) })\r\n    let ind = { index: 0 }\r\n    return (\r\n      <div>\r\n        {this.renderMulticolorSublist(multiList, ind)}\r\n        {this.renderMonocolorSublist(monoList, ind)}\r\n        {this.renderColorlessSublist(colorlessList, ind)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderMulticolorSublist = (multiList, ind) => {\r\n    let newPageTrigger = false\r\n    return (multiList.map((info, index) => {\r\n      if ((ind.index < this.state.page * this.state.elemPerPage) && (ind.index >= (this.state.page - 1) * this.state.elemPerPage)) {\r\n        ind.index += 1;\r\n        if (index === 0 || !newPageTrigger) {\r\n          newPageTrigger = true\r\n          return (\r\n            <div>\r\n              <div><h3>{`Multicolored`}</h3></div>\r\n              <div>{this.renderListElement(info)}</div>\r\n            </div>\r\n          )\r\n        } else { return (<div>{this.renderListElement(info)}</div>) }\r\n      } else { ind.index += 1; return (null) }\r\n    }))\r\n  }\r\n\r\n  renderMonocolorSublist = (monoList, ind) => {\r\n    let newPageTrigger = false\r\n    let prevColor = ''\r\n    let colorKeys = { \"W\": 'White', \"U\": 'Blue', \"B\": 'Black', \"R\": 'Red', \"G\": 'Green' }\r\n    return (monoList.map((info) => {\r\n      if ((ind.index < this.state.page * this.state.elemPerPage) && (ind.index >= (this.state.page - 1) * this.state.elemPerPage)) {\r\n        ind.index += 1;\r\n        if (!(info.colors[0] === prevColor) || !newPageTrigger) {\r\n          prevColor = info.colors[0]\r\n          newPageTrigger = true\r\n          return (\r\n            <div>\r\n              <div><h3>{colorKeys[info.colors[0]]}</h3></div>\r\n              <div>{this.renderListElement(info)}</div>\r\n            </div>\r\n          )\r\n        } else { return (<div>{this.renderListElement(info)}</div>) }\r\n      } else { ind.index += 1; return (null) }\r\n    }))\r\n  }\r\n\r\n  renderColorlessSublist = (colorlessList, ind) => {\r\n    let newPageTrigger = false\r\n    return (colorlessList.map((info, index) => {\r\n      if ((ind.index < this.state.page * this.state.elemPerPage) && (ind.index >= (this.state.page - 1) * this.state.elemPerPage)) {\r\n        ind.index += 1;\r\n        if (index === 0 || !newPageTrigger) {\r\n          newPageTrigger = true\r\n          return (\r\n            <div>\r\n              <div><h3>{`Colorless`}</h3></div>\r\n              <div>{this.renderListElement(info)}</div>\r\n            </div>\r\n          )\r\n        } else { return (<div>{this.renderListElement(info)}</div>) }\r\n      } else { ind.index += 1; return (null) }\r\n    }))\r\n  }\r\n\r\n  //Loader Methods\r\n\r\n  loadList = () => {\r\n    let n = this.props.collectionList.map((item) => {\r\n      return item.card_id;\r\n    })\r\n    let f = this.props.collectionList.map((item) => {\r\n      return item.is_foil;\r\n    })\r\n    let amt = this.props.collectionList.map((item) => {\r\n      return item.amt;\r\n    })\r\n    fetch('/api/cards/fetch-card-attribute',\r\n      {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ lstOfIds: n, is_foil: f, amt: amt, opts: this.sortIndexKeys })\r\n      }\r\n    ).then((res) => {\r\n      return res.json()\r\n    }).then((json) => {\r\n      if (!(JSON.stringify(this.state.list) === JSON.stringify(json))) {\r\n        this.setState({\r\n          list: json\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  loadDefaultSortedList = () => {\r\n    let list = JSON.stringify(this.state.list).valueOf()\r\n    list = JSON.parse(list)\r\n    list.sort((a, b) => { return (a.name.localeCompare(b.name) || a.set.localeCompare(b.set) || a.is_foil - b.is_foil) })\r\n    return list\r\n  }\r\n\r\n  //Handler Methods\r\n\r\n  handleSortMethodChange = e => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      currIndex: e.target.value\r\n    })\r\n  }\r\n\r\n  //Binded Methods\r\n\r\n  handleChangeAnyPage = (pageNumber) => {\r\n    this.setState({\r\n      page: pageNumber\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default CollectionTableListForm;","import React, { Component } from 'react';\r\nimport SessionInfo from '../../../common/cached_data/SessionInfo';\r\n\r\nconst ImageCSS = {\r\n    display: 'block',\r\n    position: 'absolute',\r\n    padding: '0',\r\n    top:'50',\r\n    left: '50',\r\n    height: 'auto',\r\n    width: '200px',\r\n    'z-index': '10',\r\n}\r\n\r\nconst HiddenImageCSS = {\r\n    display: 'none',\r\n}\r\n\r\nclass SearchResultElement extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            boxStyle: {\r\n                border: '1px orange solid',\r\n                position: 'relative',\r\n                display: 'flex',\r\n                left: '0',\r\n                right:'0',\r\n                margin: '0 0 0 0',\r\n                backgroundColor: 'white',\r\n                color: 'black'\r\n            },\r\n            titleBox:  {\r\n                position: 'relative',\r\n                left: '0',\r\n                height: '100%',\r\n                width: '70%'\r\n            },\r\n            selectBox:  {\r\n                position: 'relative',\r\n                right: '0',\r\n                height: '100%',\r\n                width: '30%',\r\n            },\r\n            nonfoilBox: {\r\n                border: '1px black dotted',\r\n                position: 'relative',\r\n                width: '100%',\r\n                margin: '0'\r\n\r\n            },\r\n            foilBox: {\r\n                border: '1px black dotted',\r\n                position: 'relative',\r\n                width: '100%',\r\n                margin: '0'\r\n                \r\n            },\r\n            imageCSS: HiddenImageCSS,\r\n            collectionID: SessionInfo.getCollectionID()\r\n        }\r\n    }\r\n\r\n    componentDidCatch(err, info) {\r\n        alert(\"SearchBoxElement \" + err)\r\n    }\r\n    \r\n    handleMouseEnter = e => {\r\n        e.preventDefault()\r\n        let newBoxStyle = {...this.state.boxStyle}\r\n        newBoxStyle.backgroundColor = 'blue'\r\n        newBoxStyle.color = 'white'\r\n        this.setState({\r\n            boxStyle: newBoxStyle\r\n        })\r\n        this.showImage()\r\n    }\r\n\r\n    handleMouseLeave = e => {\r\n        e.preventDefault()\r\n        let newBoxStyle = {...this.state.boxStyle}\r\n        newBoxStyle.backgroundColor = 'white'\r\n        newBoxStyle.color = 'black'\r\n        this.setState({\r\n            boxStyle: newBoxStyle\r\n        })\r\n        this.hideImage()\r\n    }\r\n    handleCardMouseDown = e => {\r\n        e.preventDefault()\r\n        let newBoxStyle = {...this.state.nonfoilBox}\r\n        newBoxStyle.backgroundColor = 'grey'\r\n        newBoxStyle.color = 'white'\r\n        this.setState({\r\n            nonfoilBox: newBoxStyle,\r\n        })\r\n    }\r\n\r\n    handleFoilMouseDown = e => {\r\n        e.preventDefault()\r\n        let newBoxStyle = {...this.state.foilBox}\r\n        newBoxStyle.backgroundColor = 'grey'\r\n        newBoxStyle.color = 'white'\r\n        this.setState({\r\n            foilBox: newBoxStyle,\r\n        })\r\n    }\r\n\r\n    handleCardMouseUp = e => {\r\n        e.preventDefault()\r\n        let newBoxStyle = {...this.state.nonfoilBox}\r\n        let newFoilBoxStyle = {...this.state.foilBox}\r\n        newBoxStyle.backgroundColor = undefined\r\n        newBoxStyle.color = undefined\r\n        newFoilBoxStyle.backgroundColor = undefined\r\n        newFoilBoxStyle.color = undefined\r\n        this.setState({\r\n            nonfoilBox: newBoxStyle,\r\n            foilBox: newFoilBoxStyle\r\n        })\r\n    }\r\n    selectFoil = e => {\r\n        e.preventDefault()\r\n        fetch('/api/collections/add-card-to-collection', \r\n            { \r\n            method: 'POST', \r\n            headers: { 'Content-Type': 'application/json'},\r\n            body: JSON.stringify({chosenIsFoil: true, set: this.props.item.set, set_id: this.props.item.set_id, collectionID: this.state.collectionID})\r\n            }\r\n        ).then((res) => {\r\n            this.props.updateTopmostState()\r\n        })\r\n    }\r\n    \r\n    selectCard = e => {\r\n        e.preventDefault()\r\n        fetch('/api/collections/add-card-to-collection', \r\n        { \r\n          method: 'POST', \r\n          headers: { 'Content-Type': 'application/json'},\r\n          body: JSON.stringify({chosenIsFoil: false, set: this.props.item.set, set_id: this.props.item.set_id, collectionID: this.state.collectionID})\r\n        }).then((res) => {\r\n            return res.json();\r\n        }).then((body) =>{\r\n            this.props.updateTopmostState()\r\n        })\r\n\r\n    }\r\n\r\n    showImage = () => {\r\n        this.setState({\r\n            imageCSS: ImageCSS\r\n        })\r\n    }\r\n\r\n    hideImage = () => {\r\n        this.setState({\r\n            imageCSS: HiddenImageCSS\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (     \r\n                <div style={this.state.boxStyle} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\r\n                        {this.props.item.image_uris?\r\n                                <img src={this.props.item.image_uris.border_crop} alt={this.props.item.name} style={this.state.imageCSS}></img>:\r\n                                null\r\n                        }\r\n                        <div style={this.state.titleBox}>\r\n                            <div style={{width:'100%', height: '100%'}}>{`${this.props.item.name} (${this.props.item.set_name})`}</div>\r\n                        </div>\r\n                        <div style={this.state.selectBox} onMouseEnter={this.hideImage} onMouseLeave={this.showImage}>\r\n                            {this.props.item.nonfoil ? (\r\n                                <div type= \"button\" \r\n                                        style={this.state.nonfoilBox} \r\n                                        onMouseDown={this.handleCardMouseDown}\r\n                                        onMouseUp={this.handleCardMouseUp}\r\n                                        onClick={this.selectCard}>\r\n                                            Add Card {this.props.item.prices.usd === null ? \r\n                                                    \"(Price Unavailable)\":`(USD$${this.props.item.prices.usd})`}\r\n                                </div>\r\n                            ) :null}\r\n                            \r\n                            {this.props.item.foil ? (\r\n                                <div type= \"button\" \r\n                                        style={this.state.foilBox}\r\n                                        onMouseDown={this.handleFoilMouseDown}\r\n                                        onMouseUp={this.handleCardMouseUp}\r\n                                        onClick={this.selectFoil}>\r\n                                            Add Foil Card {this.props.item.prices.usd_foil === null ? \r\n                                                            \"(Price Unavailable)\": `(USD$${this.props.item.prices.usd_foil})`}\r\n                                </div>\r\n                            ): null}\r\n                        </div>\r\n                </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default SearchResultElement;","import React, { Component } from 'react';\r\nimport SearchResultElement from './SearchResultElement'\r\nimport callAPI from './../../../common/functions/CallAPI'\r\nimport \"./../css/Collection.css\"\r\n\r\n\r\n/*CardSearchBox*/\r\nclass SearchBox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formControls: { cardName: { value: '' } },\r\n            searchResultsList: [],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        alert(\"SearchBox \" + error + info)\r\n    }\r\n\r\n    changeHandler = e => {\r\n        e.preventDefault()\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            }\r\n        },\r\n            () => {\r\n                callAPI(\r\n                    '/api/cards/query-card',\r\n                    (resp, err) => {\r\n                        if (err) {\r\n                            alert(err)\r\n                        } else {\r\n                            if (!(JSON.stringify(resp) === JSON.stringify(this.state.searchResultsList))) {\r\n                                this.setState({ searchResultsList: resp });\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify(this.state)\r\n                    }\r\n                )\r\n                    .catch((err) => {\r\n                        alert(err);\r\n                    })\r\n            });\r\n    }\r\n\r\n    renderSearchBox = () => {\r\n        return (\r\n            <div>\r\n                <div style={{ backgroundColor: 'gray' }}>\r\n                    <div>\r\n                        {\"Search Card:  \"}\r\n                        <input type=\"text\"\r\n                            name=\"cardName\"\r\n                            value={this.state.formControls.cardName.value}\r\n                            onChange={this.changeHandler}\r\n                            style={{ width: '70%', right: 0 }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{ backgroundColor: 'gray', height: '2px' }} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderSearchBox()}\r\n                <div class='searchbox_dropdown'>\r\n                    {this.state.searchResultsList.map((item) => {\r\n                        return (<SearchResultElement item={item} updateTopmostState={this.props.updateState} />)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport SessionInfo from '../../common/cached_data/SessionInfo';\r\nimport { CollectionListButton } from '../../common/elements/CommonButtons';\r\nimport readCurrURLParamsAsJSONString from '../../common/functions/ReadCurrURLParamsAsJSON';\r\nimport './css/Collection.css';\r\nimport { SwitchToFullViewButton, SwitchToListViewButton } from './elements/Buttons';\r\nimport CollectionTable from './elements/CollectionTable';\r\nimport CollectionTableListForm from './elements/CollectionTableListForm';\r\nimport SearchBox from './elements/SearchBox';\r\nimport callAPI from '../../common/functions/CallAPI'\r\n\r\nclass CollectionPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userID: SessionInfo.getSessionUserID(),\r\n            userName: SessionInfo.getSessionUser(),\r\n            collectionID: readCurrURLParamsAsJSONString().id,\r\n            collectionName: '',\r\n            description: '',\r\n            cardTableProps: {\r\n                collectionList: [],\r\n                postResponse: 'Fetching data...'\r\n            },\r\n            asList: true\r\n        }\r\n        SessionInfo.setCollectionName(this.state.collection);\r\n        SessionInfo.setCollectionID(this.state.collectionID);\r\n        this.updateState = this.updateState.bind(this)\r\n    };\r\n\r\n    componentDidCatch(error, info) {\r\n        alert(\"CollectionPage \" + error)\r\n    }\r\n\r\n    render() {\r\n        this.loadTable();\r\n        return (<div>\r\n            {this.renderButtonMenu()}\r\n            {this.renderSearchBar()}\r\n            {this.renderCollectionBar()}\r\n        </div>);\r\n    }\r\n\r\n    //Render Methods\r\n\r\n    renderButtonMenu = () => {\r\n        return (\r\n            <div class='toolbar_buttons'>\r\n                <div style={{ display: 'inline-block' }}><CollectionListButton /></div>\r\n                <div style={{ display: 'inline-block' }}>{\r\n                    !(this.state.asList) ?\r\n                        <SwitchToListViewButton onClick={this.handleViewSwitch} /> :\r\n                        <SwitchToFullViewButton onClick={this.handleViewSwitch} />\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderSearchBar = () => {\r\n        return (<div class='search_bar_main'><SearchBox updateState={this.updateState} /></div>)\r\n    }\r\n\r\n    renderCollectionBar = () => {\r\n        return (\r\n            <div class='collection_bar_main'>\r\n                <div class='collection_title'>\r\n                    <h1>{this.state.collectionName}</h1>\r\n                    <p>{this.state.description}</p>\r\n                </div>\r\n                {this.renderCardTable()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCardTable = () => {\r\n        return (\r\n            <div>\r\n                {!this.state.asList ?\r\n                    <CollectionTable\r\n                        updateState={this.updateState}\r\n                        collectionList={this.state.cardTableProps.collectionList}\r\n                        postResponse={this.state.postResponse}\r\n                    /> :\r\n                    <CollectionTableListForm\r\n                        updateState={this.updateState}\r\n                        collectionList={this.state.cardTableProps.collectionList}\r\n                        postResponse={this.state.postResponse}\r\n                    />\r\n                }\r\n            </div>)\r\n    }\r\n\r\n    //Loader Methods\r\n\r\n    loadTable = () => {\r\n        callAPI('/api/collections/fetch-collection-by-id',\r\n            (response, err) => {\r\n                if (err) {\r\n                    alert(err)\r\n                } else {\r\n                    let newCardTableProps = {\r\n                        ...this.state.cardTableProps,\r\n                        postResponse: (response.list.length === 0) ? 'You have no cards in collection.' : '',\r\n                        collectionList: response.list\r\n                    }\r\n                    if ((!(JSON.stringify(response.list) === JSON.stringify(this.state.cardTableProps.collectionList))\r\n                        || this.state.collectionName === '')) {\r\n                        this.setState({\r\n                            cardTableProps: newCardTableProps,\r\n                            collectionName: response.name,\r\n                            description: response.description,\r\n                        })\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handleViewSwitch = e => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            asList: !this.state.asList\r\n        })\r\n    }\r\n\r\n    //\r\n    // Binded Methods\r\n    updateState = () => { this.setState({ ...this.state }) }\r\n\r\n}\r\n\r\nexport default CollectionPage;","import React, { Component } from 'react';\r\nimport callAPI from '../../../common/functions/CallAPI';\r\n\r\nclass SetupChangeForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formControls: {\r\n                host: { value: '' },\r\n                port: { value: '' },\r\n                database: { value: '' },\r\n                user: { value: '' },\r\n                password: { value: '' },\r\n                status: { value: '' }\r\n            },\r\n            testResponse: '',\r\n            passwordType: \"password\",\r\n            correctBoxCSS: \"untested\",\r\n            disableAll: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDefault()\r\n    }\r\n\r\n    render() {\r\n        return (<div>{this.renderSetupDBForm()}</div>);\r\n    }\r\n\r\n    //Render functions\r\n\r\n    renderSetupDBForm = () => {\r\n        const form =\r\n            <div class=\"setup_page_default_padding\">\r\n                <div class=\"setup_page_default_padding\">--- Change Database Setup ---</div>\r\n                <div class=\"setup_page_default_padding\"></div>\r\n                <form method=\"post\" onSubmit={this.handleSubmit} class={`change_setup_border_${this.state.correctBoxCSS}`}>\r\n                    <div class=\"setup_page_default_padding\">\r\n                        <button onClick={this.handleTestConnection} disabled={this.state.disableAll}>Test Database Connection</button>\r\n                        {this.state.testResponse}\r\n                    </div>\r\n                    <title>Database Details</title>\r\n                    <div class=\"setup_page_default_padding\">Host/Port:\r\n                    <input type=\"text\"\r\n                            name=\"host\"\r\n                            value={this.state.formControls.host.value}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    :\r\n                    <input type=\"number\"\r\n                            name=\"port\"\r\n                            value={this.state.formControls.port.value}\r\n                            onChange={this.handleChange}\r\n                            min=\"0\"\r\n                            max=\"65535\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\">Database:\r\n                    <input type=\"text\"\r\n                            name=\"database\"\r\n                            value={this.state.formControls.database.value}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\">User:\r\n                    <input type=\"text\"\r\n                            name=\"user\"\r\n                            value={this.state.formControls.user.value}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    Password:\r\n                    <input type={this.state.passwordType}\r\n                            name=\"password\"\r\n                            value={this.state.formControls.password.value}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button\r\n                            onMouseDown={this.handleShowPassword}\r\n                            onMouseUp={this.handleHidePassword}\r\n                            onClick={e => { e.preventDefault() }}\r\n                        >\r\n                            Show Password\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\">\r\n                        <button type=\"submit\" disabled={(!(this.state.correctBoxCSS === \"success\")) || this.state.disableAll}>\r\n                            {!(this.state.correctBoxCSS === \"success\") ? \"Please Test Connection...\" : \"Submit\"}\r\n                        </button>\r\n                        <button onClick={this.handleCancel}>Cancel</button>\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\" />\r\n                </form>\r\n            </div>\r\n        return (form);\r\n    }\r\n\r\n    //Loader Methods\r\n\r\n    loadDefault = () => {\r\n        if (\r\n            !(JSON.stringify(this.state.formControls) === JSON.stringify(this.props.defaultResult))) {\r\n            this.setState({\r\n                formControls: this.props.defaultResult\r\n            })\r\n        }\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handleChange = e => {\r\n        e.preventDefault()\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            },\r\n            correctBoxCSS: \"untested\",\r\n            testResponse: '',\r\n        }, (this.props.postResponse === '') ? undefined : this.props.setTopState({ postResponse: '' }))\r\n    }\r\n\r\n    handleCancel = e => {\r\n        e.preventDefault()\r\n        this.props.setTopState({ changeSetup: false, postResponse: '' })\r\n    }\r\n\r\n    handleTestConnection = e => {\r\n        e.preventDefault()\r\n        this.setState({ disableAll: true },\r\n            () => {\r\n                callAPI(\r\n                    '/api/DBSetup/test-connection',\r\n                    (data, err) => {\r\n                        if (!err) {\r\n                            if (data) {\r\n                                this.setState({ correctBoxCSS: \"success\", testResponse: \"Test Success!\", disableAll: false })\r\n                            } else {\r\n                                this.setState({ correctBoxCSS: \"failed\", testResponse: \"Test Failure.\", disableAll: false })\r\n                            }\r\n                        } else {\r\n                            alert(err)\r\n                        }\r\n                    },\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                        body: JSON.stringify(this.state)\r\n                    }\r\n                )\r\n            }\r\n        )\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        callAPI(\r\n            '/api/DBSetup/update-db-info',\r\n            (data, err) => {\r\n                if (!err) {\r\n                    let postResp;\r\n                    if (data) {\r\n                        postResp = 'Success! Database changed.';\r\n                    } else {\r\n                        postResp = 'Setup Failed. Please try again.';\r\n                    }\r\n                    this.setState({\r\n                        testResponse: '',\r\n                        correctBoxCSS: \"untested\"\r\n                    }, this.props.setTopState({\r\n                        postResponse: postResp\r\n                    }))\r\n                } else {\r\n                    alert(err)\r\n                }\r\n            },\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(this.state)\r\n            }\r\n        )\r\n    }\r\n\r\n    handleShowPassword = e => {\r\n        e.preventDefault()\r\n        this.setState({ passwordType: \"text\" })\r\n    }\r\n\r\n    handleHidePassword = e => {\r\n        e.preventDefault()\r\n        this.setState({ passwordType: \"password\" })\r\n    }\r\n}\r\n\r\nexport default SetupChangeForm;","import React, { Component } from 'react';\r\n/*\r\n{\r\n    \"host\": ,\r\n    \"port\": ,\r\n    \"database\": ,\r\n    \"user\": ,\r\n    \"password\": \r\n}\r\n*/\r\n\r\n\r\nclass SetupCurrentSettingsTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentSetting: '',\r\n            report: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.loadDefault()\r\n        return (\r\n            <div>{this.renderCurrentSettingsTable()}</div>\r\n        );\r\n    }\r\n\r\n    //Render functions\r\n\r\n\r\n    renderCurrentSettingsTable = () => {\r\n        let table = (\r\n            <div>\r\n                <div id=\"setup_current_settings_table\">\r\n                    <div class=\"title_cell\">HOST</div>\r\n                    <div class=\"title_cell\">PORT</div>\r\n                    <div class=\"title_cell\">DB</div>\r\n                    <div class=\"title_cell\">USERNAME</div>\r\n                    <div class=\"title_cell\">STATUS</div>\r\n                    <div class=\"cell\">{this.state.currentSetting.HOST}</div>\r\n                    <div class=\"cell\">{this.state.currentSetting.PORT}</div>\r\n                    <div class=\"cell\">{this.state.currentSetting.DB}</div>\r\n                    <div class=\"cell\">{this.state.currentSetting.USER}</div>\r\n                    <div\r\n                        class={\r\n                            `cell ${this.state.currentSetting.STATUS === 'working' ?\r\n                                \"font_green\" : this.state.currentSetting.STATUS === 'not working' ?\r\n                                    'font_orange' : \"font_red\"} bold`}\r\n                    >\r\n                        {this.state.currentSetting.STATUS === 'working' ?\r\n                            \"ONLINE, WORKING\" : this.state.currentSetting.STATUS === 'not working' ?\r\n                                \"ONLINE, FAILED TABLE INTEGRITY TEST\" : \"OFFLINE\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        return table\r\n\r\n    }\r\n\r\n    //Loader Methods\r\n\r\n    loadDefault = () => {\r\n        if (this.props.defaultResult) {\r\n            let newcurrentSetting = {\r\n                HOST: this.props.defaultResult.host.value,\r\n                PORT: this.props.defaultResult.port.value,\r\n                DB: this.props.defaultResult.database.value,\r\n                USER: this.props.defaultResult.user.value,\r\n                STATUS: this.props.defaultResult.status.value\r\n            }\r\n            if (!(JSON.stringify(newcurrentSetting) === JSON.stringify(this.state.currentSetting))) {\r\n                this.setState({\r\n                    currentSetting: newcurrentSetting,\r\n                    report: this.props.defaultResult.report.value\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n}\r\n\r\nexport default SetupCurrentSettingsTable;","import React, { Component } from 'react';\r\nimport callAPI from '../../../common/functions/CallAPI';\r\n\r\nclass CreateNewDBForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formControls: {\r\n                database: { value: '' }\r\n            },\r\n            testResponse: '',\r\n            correctBoxCSS: \"untested\",\r\n            disableAll: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>{this.renderCreateDBForm()}</div>);\r\n    }\r\n\r\n    //Render functions\r\n\r\n    renderCreateDBForm = () => {\r\n        const form =\r\n            <div class=\"setup_page_default_padding\">\r\n                <div class=\"setup_page_default_padding\">--- Create New Database ---</div>\r\n                <div class=\"setup_page_default_padding\"></div>\r\n                <form method=\"post\" onSubmit={this.handleSubmit} class={`change_setup_border_${this.state.correctBoxCSS}`}>\r\n                    <div class=\"setup_page_default_padding\">\r\n                        <button onClick={this.handleTestConnection} disabled={this.state.disableAll}>\r\n                            Test Name Availability\r\n                        </button>\r\n                        {this.state.testResponse}\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\">New Database Name:\r\n                    <input type=\"text\"\r\n                            name=\"database\"\r\n                            value={this.state.formControls.database.value}\r\n                            onChange={this.handleChange}\r\n                            disabled={this.state.disableAll}\r\n                            placeholder=\"Insert name here.\" />\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\">\r\n                        <button type=\"submit\" disabled={!(this.state.correctBoxCSS === \"success\") || this.state.disableAll}>\r\n                            {!(this.state.correctBoxCSS === \"success\") ?\r\n                                \"Please Test Availabilty...\" : \"Submit (Database will be changed on Success)\"}\r\n                        </button>\r\n                        <button onClick={this.handleCancel}>Cancel</button>\r\n                    </div>\r\n                    <div class=\"setup_page_default_padding\" />\r\n                </form>\r\n            </div>\r\n        return (form);\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handleChange = e => {\r\n        e.preventDefault()\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            formControls: {\r\n                ...this.state.formControls,\r\n                [name]: {\r\n                    ...this.state.formControls[name],\r\n                    value\r\n                }\r\n            },\r\n            correctBoxCSS: \"untested\",\r\n            testResponse: '',\r\n        }, (this.props.postResponse === '') ? undefined : this.props.setTopState({ postResponse: '' }))\r\n    }\r\n\r\n    handleCancel = e => {\r\n        e.preventDefault()\r\n        this.props.setTopState({ changeSetup: false, postResponse: '' })\r\n    }\r\n\r\n    handleTestConnection = e => {\r\n        e.preventDefault()\r\n        this.setState({ disableAll: true }, () => {\r\n            if (!this.state.formControls.database.value.match(/^[A-Za-z0-9_-]{5,}$/)) {\r\n                this.setState({\r\n                    correctBoxCSS: \"failed\",\r\n                    testResponse: `Name Not Valid. \r\n                                (The name must be consisting of at least 5 alphanumeric characters, \r\n                                underscores and dashes.)`,\r\n                    disableAll: false\r\n                })\r\n                return null\r\n            }\r\n            callAPI(\r\n                '/api/DBSetup/test-db-availability',\r\n                (data, err) => {\r\n                    if (!err) {\r\n                        if (data) {\r\n                            this.setState({ correctBoxCSS: \"success\", testResponse: \"Database Name Available!\", disableAll: false })\r\n                        } else {\r\n                            this.setState({ correctBoxCSS: \"failed\", testResponse: \"Database Name Taken.\", disableAll: false })\r\n                        }\r\n                    } else {\r\n                        alert(err)\r\n                    }\r\n                },\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(this.state)\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        let postResp;\r\n        this.setState({ disableAll: true }, () => {\r\n            callAPI(\r\n                '/api/DBSetup/create-database',\r\n                (data, err) => {\r\n                    if (!err) {\r\n                        if (data) {\r\n                            postResp = 'Success! Database created.';\r\n                        } else {\r\n                            postResp = 'Setup Failed. Please try again.';\r\n                        }\r\n                        this.setState({\r\n                            testResponse: '',\r\n                            correctBoxCSS: \"untested\",\r\n                            disableAll: false\r\n                        }, this.props.setTopState({\r\n                            postResponse: postResp\r\n                        }))\r\n                    } else {\r\n                        alert(err)\r\n                        postResp = 'Setup Failed. Please try again.';\r\n                        this.setState({\r\n                            testResponse: '',\r\n                            correctBoxCSS: \"failed\",\r\n                            disableAll: false\r\n                        }, this.props.setTopState({\r\n                            postResponse: postResp\r\n                        }))\r\n                    }\r\n                },\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(this.state)\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    handleShowPassword = e => {\r\n        e.preventDefault()\r\n        this.setState({ passwordType: \"text\" })\r\n    }\r\n\r\n    handleHidePassword = e => {\r\n        e.preventDefault()\r\n        this.setState({ passwordType: \"password\" })\r\n    }\r\n}\r\n\r\nexport default CreateNewDBForm;","import React, { Component } from 'react';\r\nimport { HomeButton, LoginButton } from '../../common/elements/CommonButtons';\r\nimport './css/DBSetup.css';\r\nimport SetupChangeForm from './elements/SetupChangeForm';\r\nimport SetupCurrentSettingsTable from './elements/SetupCurrentSettingsTable';\r\nimport CreateNewDBForm from './elements/CreateNewDBForm';\r\nimport callAPI from '../../common/functions/CallAPI';\r\n/*\r\n{\r\n    \"host\": ,\r\n    \"port\": ,\r\n    \"database\": ,\r\n    \"user\": ,\r\n    \"password\": \r\n}\r\n*/\r\n\r\n\r\nclass SetupPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            changeSetup: false,\r\n            postResponse: '',\r\n            defaultResult:'',\r\n            reloadable: false,\r\n            report: '',\r\n            offline: true\r\n        }\r\n        this.setTopState = this.setTopState.bind(this)\r\n    }\r\n\r\n    render() {\r\n        this.loadDefault()\r\n        return (<div>{this.renderSetupPage()}</div>)\r\n    }\r\n\r\n    renderSetupPage = () => {\r\n        return (\r\n            <div>\r\n                <div><h1>Database Setup</h1></div>\r\n                <div>Current Settings:</div>\r\n                <div class=\"setup_page_default_padding\"><SetupCurrentSettingsTable\r\n                    defaultResult={this.state.defaultResult}\r\n                /></div>\r\n\r\n                <div class=\"setup_page_default_padding\">\r\n                    {this.state.changeSetup ?\r\n                        this.state.changeSetup === 1 ?\r\n                            <SetupChangeForm \r\n                            setTopState={this.setTopState} \r\n                            postResponse={this.state.postResponse}\r\n                            defaultResult={this.state.defaultResult} /> : null :\r\n                        <button onClick={this.handleToggleChangeSetup}> Change Setup</button>}\r\n                    {this.state.changeSetup ?\r\n                        this.state.changeSetup === 2 ?\r\n                            <CreateNewDBForm \r\n                            setTopState={this.setTopState} \r\n                            postResponse={this.state.postResponse} \r\n                            /> : null :\r\n                        <button onClick={this.handleToggleCreateDB} disabled={this.state.offline}> Create New Database</button>}\r\n                    {!this.state.changeSetup?\r\n                        <button onClick={this.handleTableReload} disabled={(this.state.disableAll ^ !this.state.reloadable)||this.state.offline}>\r\n                            Reload Database\r\n                            </button>\r\n                        : null\r\n                    }\r\n                </div>\r\n                <div>{this.state.reloadable ? this.state.report : null}</div>\r\n                <div class=\"setup_page_default_padding\">\r\n                    <HomeButton />\r\n                    <LoginButton />\r\n                </div>\r\n                <div class=\"setup_page_default_padding\">\r\n                    {this.state.postResponse}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Handler Methods\r\n\r\n    handleToggleChangeSetup = e => {\r\n        e.preventDefault()\r\n        this.setState({ changeSetup: 1 })\r\n    }\r\n\r\n    handleToggleCreateDB = e => {\r\n        e.preventDefault()\r\n        this.setState({ changeSetup: 2 })\r\n    }\r\n\r\n    handleTableReload = e => {\r\n        e.preventDefault()\r\n        if (window.confirm(\"ARE YOU SURE YOU WANT TO RELOAD TABLES? Doing this WILL override existing tables: users, collection, listing, cards and you will lose all data stored in those tables.\")) {\r\n            this.setState({ reloadable: false }, () => {\r\n                callAPI('/api/DBSetup/recreate-all-tables', (res) => { \r\n                    this.setState({postResponse: res?'Successfully reloaded tables': 'Table reload failed'})\r\n                 })\r\n            })\r\n        }\r\n    }\r\n\r\n    //Loader Methods\r\n\r\n    loadDefault = () => {\r\n        callAPI(\r\n            '/api/DBSetup/get-DB-details',\r\n            (result, err) => {\r\n                if (!err) {\r\n                    if (!(JSON.stringify(result) === JSON.stringify(this.state.defaultResult))) {\r\n                        this.setState({\r\n                            defaultResult: result,\r\n                            reloadable: !(result.status.value === 'working'),\r\n                            offline: (result.status.value === 'offline'),\r\n                            report: JSON.stringify(result.report.value)\r\n                        })\r\n                    } else {\r\n                        console.log(err)\r\n                    }\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    //Binder Methods\r\n\r\n    setTopState = (newstate) => {\r\n        this.setState(newstate)\r\n    }\r\n\r\n}\r\n\r\nexport default SetupPage;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport './App.css';\n\n\n//Importing pages\nimport HomePage from './pages/home/HomePage';\nimport UserListingPage from './pages/home/UserListingPage';\nimport LoginPage from './pages/login/LoginPage';\nimport SignupPage from './pages/login/SignupPage';\nimport ListingsMainPage from './pages/listing/ListingsMainPage';\nimport CreateCollectionPage from './pages/listing/CreateCollectionPage';\nimport EditCollectionPage from './pages/listing/EditCollectionPage';\nimport DownloadPage from './pages/download/DownloadPage';\nimport CollectionPage from './pages/collection/CollectionPage';\nimport SetupPage from './pages/DBsetup/SetupPage';\n\n//importing required common tools\nimport SessionInfo from './common/cached_data/SessionInfo';\nimport readCurrURLParamsAsJSON from './common/functions/ReadCurrURLParamsAsJSON';\n\n//import { createBrowserHistory } from \"history\";\n//const customHistory = createBrowserHistory()\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tSessionInfo.initializeSession();\n\t}\n\n\tcomponentDidCatch(err) {\n\t\talert(\"App Error\" + err)\n\t}\n\n\trender() {\n\t\tconst App = () => (\n\t\t\t<div>\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path='/home' component={HomePage} />\n\t\t\t\t\t\t<Route path='/userlist' component={UserListingPage} />\n\t\t\t\t\t\t<Route path='/login'>\n\t\t\t\t\t\t\t{!SessionInfo.getSessionStatus()? withRouter(LoginPage): <Redirect push to='/collections'/>}\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route path='/signup' component={SignupPage} />\n\t\t\t\t\t\t<Route path='/setup' component={SetupPage} />\n\t\t\t\t\t\t{/*collections pages will redirect to login page if logged out*/}\n\t\t\t\t\t\t<Route path='/collections' component={()=> {\n\t\t\t\t\t\t\t\tif (!SessionInfo.getSessionStatus()) {\n\t\t\t\t\t\t\t\t\treturn (<Redirect push to='/login'/>);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tswitch (readCurrURLParamsAsJSON().page) {\n\t\t\t\t\t\t\t\t\t\tcase \"default\":\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn (<Route path= '/collections' component = {ListingsMainPage}/>);\n\t\t\t\t\t\t\t\t\t\tcase \"create-new-collection\":\n\t\t\t\t\t\t\t\t\t\t\treturn (<Route path= '/collections' component = {CreateCollectionPage}/>);\n\t\t\t\t\t\t\t\t\t\tcase \"selected\":\n\t\t\t\t\t\t\t\t\t\t\treturn (<Route path= '/collections' component = {CollectionPage}/>)\n\t\t\t\t\t\t\t\t\t\tcase \"edit\":\n\t\t\t\t\t\t\t\t\t\t\treturn (<Route path= '/collections' component = {EditCollectionPage}/>)\n\t\t\t\t\t\t\t\t\t\tdefault:\t\n\t\t\t\t\t\t\t\t\t\t\treturn (<Route path= '/collections' component = {ListingsMainPage}/>);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}/>\n\t\t\t\t\t\t<Route path='/downloads' render={\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tswitch (readCurrURLParamsAsJSON().func) {\n\t\t\t\t\t\t\t\t\t//subrouting\n\t\t\t\t\t\t\t\t\tcase '':\n\t\t\t\t\t\t\t\t\t\treturn (<Redirect push to='/'/>)\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn (<Route path='/downloads' component={DownloadPage} />)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} />\n\t\t\t\t\t\t<Route path=\"*\" component={() => { return (<Redirect to='/home' />) }} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t)\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<App />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport HookedApp from './HookedApp'\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<HookedApp/>, document.getElementById('root'));\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}